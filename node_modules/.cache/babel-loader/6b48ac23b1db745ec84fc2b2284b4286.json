{"ast":null,"code":"import _slicedToArray from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';export default function Stats(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),currStats=_useState2[0],setCurrStats=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),prevStats=_useState4[0],setPrevStats=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),tempStats=_useState6[0],setTempStats=_useState6[1];var currStatsStable=currStats;useEffect(function(){if(props.pathLength&&props.nodesChecked){setCurrStats({algorithmUsed:props.algorithmUsed,pathLength:props.pathLength,nodesChecked:props.nodesChecked});}else{if(currStatsStable&&!props.clearStats){var algorithmUsed=currStatsStable.algorithmUsed;var pathLength=currStatsStable.pathLength;var nodesChecked=currStatsStable.nodesChecked;setTempStats({algorithmUsed:algorithmUsed,pathLength:pathLength,nodesChecked:nodesChecked});setCurrStats(null);}}if(props.clearStats){setCurrStats(null);setPrevStats(null);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[props]);useEffect(function(){setPrevStats(tempStats);},[tempStats]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"stats-container\"},currStats?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"p\",{className:\"label\"},\"Current Run: \"),/*#__PURE__*/React.createElement(\"p\",null,\"Algorithm used: \",currStats.algorithmUsed),/*#__PURE__*/React.createElement(\"p\",null,\"Path Length: \",currStats.pathLength),/*#__PURE__*/React.createElement(\"p\",null,\"Nodes Visited: \",currStats.nodesChecked-1)):null),/*#__PURE__*/React.createElement(\"div\",{className:\"prev-stats-container\"},prevStats?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"p\",{className:\"label\"},\"Previous Run: \"),/*#__PURE__*/React.createElement(\"p\",null,\"Algorithm used: \",prevStats.algorithmUsed),/*#__PURE__*/React.createElement(\"p\",null,\"Path Length: \",prevStats.pathLength),/*#__PURE__*/React.createElement(\"p\",null,\"Nodes Visited: \",prevStats.nodesChecked-1)):null));}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx"],"names":["React","useState","useEffect","Stats","props","currStats","setCurrStats","prevStats","setPrevStats","tempStats","setTempStats","currStatsStable","pathLength","nodesChecked","algorithmUsed","clearStats"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,cAAe,SAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,eACDH,QAAQ,CAAC,IAAD,CADP,wCAC5BI,SAD4B,eACjBC,YADiB,8BAEDL,QAAQ,CAAC,IAAD,CAFP,yCAE5BM,SAF4B,eAEjBC,YAFiB,8BAGDP,QAAQ,CAAC,CAAD,CAHP,yCAG5BQ,SAH4B,eAGjBC,YAHiB,eAKnC,GAAMC,CAAAA,eAAe,CAAGN,SAAxB,CAEAH,SAAS,CAAC,UAAM,CACd,GAAIE,KAAK,CAACQ,UAAN,EAAoBR,KAAK,CAACS,YAA9B,CAA4C,CAC1CP,YAAY,CAAC,CACXQ,aAAa,CAAEV,KAAK,CAACU,aADV,CAEXF,UAAU,CAAER,KAAK,CAACQ,UAFP,CAGXC,YAAY,CAAET,KAAK,CAACS,YAHT,CAAD,CAAZ,CAKD,CAND,IAMO,CACL,GAAIF,eAAe,EAAI,CAACP,KAAK,CAACW,UAA9B,CAA0C,CACxC,GAAID,CAAAA,aAAa,CAAGH,eAAe,CAACG,aAApC,CACA,GAAIF,CAAAA,UAAU,CAAGD,eAAe,CAACC,UAAjC,CACA,GAAIC,CAAAA,YAAY,CAAGF,eAAe,CAACE,YAAnC,CAEAH,YAAY,CAAC,CACXI,aAAa,CAAEA,aADJ,CAEXF,UAAU,CAAEA,UAFD,CAGXC,YAAY,CAAEA,YAHH,CAAD,CAAZ,CAMAP,YAAY,CAAC,IAAD,CAAZ,CACD,CACF,CACD,GAAIF,KAAK,CAACW,UAAV,CAAsB,CACpBT,YAAY,CAAC,IAAD,CAAZ,CACAE,YAAY,CAAC,IAAD,CAAZ,CACD,CACD;AACD,CA3BQ,CA2BN,CAACJ,KAAD,CA3BM,CAAT,CA6BAF,SAAS,CAAC,UAAM,CACdM,YAAY,CAACC,SAAD,CAAZ,CACD,CAFQ,CAEN,CAACA,SAAD,CAFM,CAAT,CAIA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,2BAAK,SAAS,CAAC,iBAAf,EACGJ,SAAS,cACR,oBAAC,KAAD,CAAO,QAAP,mBACE,yBAAG,SAAS,CAAC,OAAb,kBADF,cAEE,gDAAoBA,SAAS,CAACS,aAA9B,CAFF,cAGE,6CAAiBT,SAAS,CAACO,UAA3B,CAHF,cAIE,+CAAmBP,SAAS,CAACQ,YAAV,CAAyB,CAA5C,CAJF,CADQ,CAON,IARN,CADF,cAYE,2BAAK,SAAS,CAAC,sBAAf,EACGN,SAAS,cACR,oBAAC,KAAD,CAAO,QAAP,mBACE,yBAAG,SAAS,CAAC,OAAb,mBADF,cAEE,gDAAoBA,SAAS,CAACO,aAA9B,CAFF,cAGE,6CAAiBP,SAAS,CAACK,UAA3B,CAHF,cAIE,+CAAmBL,SAAS,CAACM,YAAV,CAAyB,CAA5C,CAJF,CADQ,CAON,IARN,CAZF,CADF,CAyBD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Stats(props) {\n  const [currStats, setCurrStats] = useState(null);\n  const [prevStats, setPrevStats] = useState(null);\n  const [tempStats, setTempStats] = useState(0);\n\n  const currStatsStable = currStats;\n\n  useEffect(() => {\n    if (props.pathLength && props.nodesChecked) {\n      setCurrStats({\n        algorithmUsed: props.algorithmUsed,\n        pathLength: props.pathLength,\n        nodesChecked: props.nodesChecked,\n      });\n    } else {\n      if (currStatsStable && !props.clearStats) {\n        let algorithmUsed = currStatsStable.algorithmUsed;\n        let pathLength = currStatsStable.pathLength;\n        let nodesChecked = currStatsStable.nodesChecked;\n\n        setTempStats({\n          algorithmUsed: algorithmUsed,\n          pathLength: pathLength,\n          nodesChecked: nodesChecked,\n        });\n\n        setCurrStats(null);\n      }\n    }\n    if (props.clearStats) {\n      setCurrStats(null);\n      setPrevStats(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  useEffect(() => {\n    setPrevStats(tempStats);\n  }, [tempStats]);\n\n  return (\n    <React.Fragment>\n      <div className=\"stats-container\">\n        {currStats ? (\n          <React.Fragment>\n            <p className=\"label\">Current Run: </p>\n            <p>Algorithm used: {currStats.algorithmUsed}</p>\n            <p>Path Length: {currStats.pathLength}</p>\n            <p>Nodes Visited: {currStats.nodesChecked - 1}</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n\n      <div className=\"prev-stats-container\">\n        {prevStats ? (\n          <React.Fragment>\n            <p className=\"label\">Previous Run: </p>\n            <p>Algorithm used: {prevStats.algorithmUsed}</p>\n            <p>Path Length: {prevStats.pathLength}</p>\n            <p>Nodes Visited: {prevStats.nodesChecked - 1}</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}