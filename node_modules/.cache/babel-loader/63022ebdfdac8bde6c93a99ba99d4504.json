{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/grid.jsx\";\nimport React, { Component } from \"react\";\nimport Node from \"./node/node\";\nimport \"./grid.css\";\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: []\n    };\n    this.handleStartNodeSet = this.handleStartNodeSet.bind(this);\n  }\n\n  componentDidMount() {\n    let nodes = [];\n\n    for (let row = 0; row < 15; row++) {\n      let currentRow = [];\n\n      for (let col = 0; col < 30; col++) {\n        let currentNode = {\n          row: row,\n          col: col,\n          nodeType: \"normal-node\"\n        };\n        currentRow.push(currentNode);\n      }\n\n      nodes.push(currentRow);\n    }\n\n    this.setState({\n      nodes\n    });\n  }\n\n  handleNodeClick(newRow, newColumn) {\n    let nodeSelectMode = this.props.selectionMode;\n\n    if (nodeSelectMode === \"start\") {\n      let nodes = this.state.nodes;\n      let rowIndex = -1;\n      let colIndex = -1;\n\n      for (let i = 0; i < nodes.length; i++) {\n        colIndex = nodes[i].findIndex(currentColumn => {\n          return currentColumn.nodeType === \"start-node\";\n        });\n\n        if (rowIndex != -1) {\n          rowIndex = i;\n          break;\n        }\n      }\n\n      if (rowIndex != -1 && colIndex != -1) {\n        nodes[rowIndex][colIndex].nodeType = \"normal-node\";\n        nodes[newRow][newColumn].nodeType = \"start-node\";\n        this.setState({\n          nodes\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, nodes.map((row, rowIndex) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: rowIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, row.map((node, colIndex) => {\n        return /*#__PURE__*/React.createElement(Node, {\n          key: colIndex,\n          node: node,\n          selectionMode: this.props.selectionMode,\n          handleStartNodeSet: this.handleStartNodeSet,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }\n        });\n      }));\n    }));\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/grid.jsx"],"names":["React","Component","Node","Grid","constructor","props","state","nodes","handleStartNodeSet","bind","componentDidMount","row","currentRow","col","currentNode","nodeType","push","setState","handleNodeClick","newRow","newColumn","nodeSelectMode","selectionMode","rowIndex","colIndex","i","length","findIndex","currentColumn","render","map","node"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Node from \"./node/node\";\nimport \"./grid.css\";\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStartNodeSet = this.handleStartNodeSet.bind(this);\n  }\n\n  state = {\n    nodes: [],\n  };\n\n  componentDidMount() {\n    let nodes = [];\n    for (let row = 0; row < 15; row++) {\n      let currentRow = [];\n      for (let col = 0; col < 30; col++) {\n        let currentNode = {\n          row: row,\n          col: col,\n          nodeType: \"normal-node\",\n        };\n        currentRow.push(currentNode);\n      }\n      nodes.push(currentRow);\n    }\n    this.setState({ nodes });\n  }\n\n  handleNodeClick(newRow, newColumn) {\n    let nodeSelectMode = this.props.selectionMode;\n\n    if (nodeSelectMode === \"start\") {\n      let nodes = this.state.nodes;\n      let rowIndex = -1;\n      let colIndex = -1;\n      for (let i = 0; i < nodes.length; i++) {\n        colIndex = nodes[i].findIndex((currentColumn) => {\n          return currentColumn.nodeType === \"start-node\";\n        });\n\n        if (rowIndex != -1) {\n          rowIndex = i;\n          break;\n        }\n      }\n\n      if (rowIndex != -1 && colIndex != -1) {\n        nodes[rowIndex][colIndex].nodeType = \"normal-node\";\n        nodes[newRow][newColumn].nodeType = \"start-node\";\n\n        this.setState({ nodes });\n      }\n    }\n  }\n\n  render() {\n    const { nodes } = this.state;\n\n    return (\n      <div className=\"grid\">\n        {nodes.map((row, rowIndex) => {\n          return (\n            <div key={rowIndex}>\n              {row.map((node, colIndex) => {\n                return (\n                  <Node\n                    key={colIndex}\n                    node={node}\n                    selectionMode={this.props.selectionMode}\n                    handleStartNodeSet={this.handleStartNodeSet}\n                  ></Node>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}