{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx\";\nimport React, { useState, useEffect } from 'react';\nexport default function Stats(props) {\n  const [currStats, setCurrStats] = useState(null);\n  const [prevStats, setPrevStats] = useState(null);\n  const [tempStats, setTempStats] = useState(0);\n  const currStatsStable = currStats;\n  useEffect(() => {\n    if (props.pathLength && props.nodesChecked && props.timeElapsed) {\n      setCurrStats({\n        algorithmUsed: props.algorithmUsed,\n        pathLength: props.pathLength,\n        nodesChecked: props.nodesChecked,\n        timeElapsed: props.timeElapsed\n      });\n    } else {\n      if (currStatsStable && !props.clearStats) {\n        let algorithmUsed = currStatsStable.algorithmUsed;\n        let pathLength = currStatsStable.pathLength;\n        let nodesChecked = currStatsStable.nodesChecked;\n        let timeElapsed = currStatsStable.timeElapsed;\n        setTempStats({\n          algorithmUsed: algorithmUsed,\n          pathLength: pathLength,\n          nodesChecked: nodesChecked,\n          timeElapsed: timeElapsed\n        });\n        setCurrStats(null);\n      }\n    }\n\n    if (props.clearStats) {\n      setCurrStats(null);\n      setPrevStats(null);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props]);\n  useEffect(() => {\n    setPrevStats(tempStats);\n  }, [tempStats]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, currStats ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Current Run: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Algorithm used: \", currStats.algorithmUsed), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Path Length: \", currStats.pathLength), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Nodes Visited: \", currStats.nodesChecked - 1), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Time Elapsed: \", currStats.timeElapsed / 1000, \"s\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prev-stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, prevStats ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Previous Run: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Algorithm used: \", prevStats.algorithmUsed), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Path Length: \", prevStats.pathLength), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Nodes Visited: \", prevStats.nodesChecked - 1), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Time Elapsed: \", currStats.timeElapsed / 1000, \"s\")) : null));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx"],"names":["React","useState","useEffect","Stats","props","currStats","setCurrStats","prevStats","setPrevStats","tempStats","setTempStats","currStatsStable","pathLength","nodesChecked","timeElapsed","algorithmUsed","clearStats"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Stats(props) {\n  const [currStats, setCurrStats] = useState(null);\n  const [prevStats, setPrevStats] = useState(null);\n  const [tempStats, setTempStats] = useState(0);\n\n  const currStatsStable = currStats;\n\n  useEffect(() => {\n    if (props.pathLength && props.nodesChecked && props.timeElapsed) {\n      setCurrStats({\n        algorithmUsed: props.algorithmUsed,\n        pathLength: props.pathLength,\n        nodesChecked: props.nodesChecked,\n        timeElapsed: props.timeElapsed,\n      });\n    } else {\n      if (currStatsStable && !props.clearStats) {\n        let algorithmUsed = currStatsStable.algorithmUsed;\n        let pathLength = currStatsStable.pathLength;\n        let nodesChecked = currStatsStable.nodesChecked;\n        let timeElapsed = currStatsStable.timeElapsed;\n\n        setTempStats({\n          algorithmUsed: algorithmUsed,\n          pathLength: pathLength,\n          nodesChecked: nodesChecked,\n          timeElapsed: timeElapsed,\n        });\n\n        setCurrStats(null);\n      }\n    }\n    if (props.clearStats) {\n      setCurrStats(null);\n      setPrevStats(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  useEffect(() => {\n    setPrevStats(tempStats);\n  }, [tempStats]);\n\n  return (\n    <React.Fragment>\n      <div className=\"stats-container\">\n        {currStats ? (\n          <React.Fragment>\n            <p className=\"label\">Current Run: </p>\n            <p>Algorithm used: {currStats.algorithmUsed}</p>\n            <p>Path Length: {currStats.pathLength}</p>\n            <p>Nodes Visited: {currStats.nodesChecked - 1}</p>\n            <p>Time Elapsed: {currStats.timeElapsed / 1000}s</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n\n      <div className=\"prev-stats-container\">\n        {prevStats ? (\n          <React.Fragment>\n            <p className=\"label\">Previous Run: </p>\n            <p>Algorithm used: {prevStats.algorithmUsed}</p>\n            <p>Path Length: {prevStats.pathLength}</p>\n            <p>Nodes Visited: {prevStats.nodesChecked - 1}</p>\n            <p>Time Elapsed: {currStats.timeElapsed / 1000}s</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}