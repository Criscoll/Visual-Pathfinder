{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx\";\nimport React, { useState, useEffect } from 'react';\nexport default function Stats(props) {\n  const [currStats, setCurrStats] = useState(null);\n  const [prevStats, setPrevStats] = useState(null);\n  const [tempStats, setTempStats] = useState(null);\n  useEffect(() => {\n    if (currStats) {\n      setTempStats({\n        algorithmUsed: currStats.algorithmUsed,\n        pathLength: currStats.pathLength,\n        nodesChecked: currStats.nodesChecked\n      });\n    }\n\n    if (props.algorithmUsed !== null) {\n      setCurrStats({\n        algorithmUsed: props.algorithmUsed,\n        pathLength: props.pathLength,\n        nodesChecked: props.nodesChecked\n      });\n    } else {\n      setPrevStats(null);\n      setCurrStats(null);\n    }\n  }, [props]);\n  useEffect(() => {\n    if (currStats) {\n      setPrevStats(tempStats);\n    }\n  }, [tempStats]);\n  useEffect(() => {\n    if (currStats) {\n      setPrevStats(tempStats);\n    }\n  }, [currStats]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, currStats ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Current Run: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Alogrithm used: \", currStats.algorithmUsed), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Path Length: \", currStats.pathLength), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Nodes Visited: \", currStats.nodesChecked - 1)) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prev-stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, prevStats ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Previous Run: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Alogrithm used: \", prevStats.algorithmUsed), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Path Length: \", prevStats.pathLength), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Nodes Visited: \", prevStats.nodesChecked - 1)) : null));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx"],"names":["React","useState","useEffect","Stats","props","currStats","setCurrStats","prevStats","setPrevStats","tempStats","setTempStats","algorithmUsed","pathLength","nodesChecked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,SAAJ,EAAe;AACbK,MAAAA,YAAY,CAAC;AACXC,QAAAA,aAAa,EAAEN,SAAS,CAACM,aADd;AAEXC,QAAAA,UAAU,EAAEP,SAAS,CAACO,UAFX;AAGXC,QAAAA,YAAY,EAAER,SAAS,CAACQ;AAHb,OAAD,CAAZ;AAKD;;AACD,QAAIT,KAAK,CAACO,aAAN,KAAwB,IAA5B,EAAkC;AAChCL,MAAAA,YAAY,CAAC;AACXK,QAAAA,aAAa,EAAEP,KAAK,CAACO,aADV;AAEXC,QAAAA,UAAU,EAAER,KAAK,CAACQ,UAFP;AAGXC,QAAAA,YAAY,EAAET,KAAK,CAACS;AAHT,OAAD,CAAZ;AAKD,KAND,MAMO;AACLL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAlBQ,EAkBN,CAACF,KAAD,CAlBM,CAAT;AAoBAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,SAAJ,EAAe;AACbG,MAAAA,YAAY,CAACC,SAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,SAAJ,EAAe;AACbG,MAAAA,YAAY,CAACC,SAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACJ,SAAD,CAJM,CAAT;AAMA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,gBACR,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBA,SAAS,CAACM,aAA9B,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBN,SAAS,CAACO,UAA3B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBP,SAAS,CAACQ,YAAV,GAAyB,CAA5C,CAJF,CADQ,GAON,IARN,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,gBACR,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBA,SAAS,CAACI,aAA9B,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBJ,SAAS,CAACK,UAA3B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBL,SAAS,CAACM,YAAV,GAAyB,CAA5C,CAJF,CADQ,GAON,IARN,CAZF,CADF;AAyBD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Stats(props) {\n  const [currStats, setCurrStats] = useState(null);\n  const [prevStats, setPrevStats] = useState(null);\n  const [tempStats, setTempStats] = useState(null);\n\n  useEffect(() => {\n    if (currStats) {\n      setTempStats({\n        algorithmUsed: currStats.algorithmUsed,\n        pathLength: currStats.pathLength,\n        nodesChecked: currStats.nodesChecked,\n      });\n    }\n    if (props.algorithmUsed !== null) {\n      setCurrStats({\n        algorithmUsed: props.algorithmUsed,\n        pathLength: props.pathLength,\n        nodesChecked: props.nodesChecked,\n      });\n    } else {\n      setPrevStats(null);\n      setCurrStats(null);\n    }\n  }, [props]);\n\n  useEffect(() => {\n    if (currStats) {\n      setPrevStats(tempStats);\n    }\n  }, [tempStats]);\n\n  useEffect(() => {\n    if (currStats) {\n      setPrevStats(tempStats);\n    }\n  }, [currStats]);\n\n  return (\n    <React.Fragment>\n      <div className=\"stats-container\">\n        {currStats ? (\n          <React.Fragment>\n            <p className=\"label\">Current Run: </p>\n            <p>Alogrithm used: {currStats.algorithmUsed}</p>\n            <p>Path Length: {currStats.pathLength}</p>\n            <p>Nodes Visited: {currStats.nodesChecked - 1}</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n\n      <div className=\"prev-stats-container\">\n        {prevStats ? (\n          <React.Fragment>\n            <p className=\"label\">Previous Run: </p>\n            <p>Alogrithm used: {prevStats.algorithmUsed}</p>\n            <p>Path Length: {prevStats.pathLength}</p>\n            <p>Nodes Visited: {prevStats.nodesChecked - 1}</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}