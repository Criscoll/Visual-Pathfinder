{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/node/node.jsx\";\nimport React, { Component } from \"react\";\nimport \"./node.css\";\n\nclass Node extends Component {\n  constructor(props) {\n    super(props);\n    this.setStart = this.setStart.bind(this);\n    this.setEnd = this.setEnd.bind(this);\n    this.setWall = this.setWall.bind(this);\n    this.state = {\n      nodeType: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.nodeType,\n      onClick: this.getSelectionFunction(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    });\n  }\n\n  componentDidMount() {\n    let nodeType = this.props.nodeType;\n    this.setState({\n      nodeType\n    });\n  }\n\n  getSelectionFunction() {\n    let selectionFunction = this.setWall;\n\n    if (this.props.selectionMode === \"start\") {\n      selectionFunction = this.setStart;\n    } else if (this.props.selectionMode === \"end\") {\n      selectionFunction = this.setEnd;\n    }\n\n    return selectionFunction;\n  }\n\n  setStart() {\n    if (this.props.startNodeSet === false) {\n      console.log(\"HEREEE\");\n      this.props.handleStartNodeSet();\n      let nodeType = \"start-node\";\n      this.setState({\n        nodeType\n      });\n    }\n  }\n\n  setEnd() {\n    let nodeType = \"end-node\";\n    this.setState({\n      nodeType\n    });\n  }\n\n  setWall() {\n    let nodeType = \"wall-node\";\n    this.setState({\n      nodeType\n    });\n  }\n\n}\n\nexport default Node;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/node/node.jsx"],"names":["React","Component","Node","constructor","props","setStart","bind","setEnd","setWall","state","nodeType","render","getSelectionFunction","componentDidMount","setState","selectionFunction","selectionMode","startNodeSet","console","log","handleStartNodeSet"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAf;AAEA,SAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,QADxB;AAEE,MAAA,OAAO,EAAE,KAAKE,oBAAL,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIH,QAAQ,GAAG,KAAKN,KAAL,CAAWM,QAA1B;AACA,SAAKI,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,QAAIG,iBAAiB,GAAG,KAAKP,OAA7B;;AACA,QAAI,KAAKJ,KAAL,CAAWY,aAAX,KAA6B,OAAjC,EAA0C;AACxCD,MAAAA,iBAAiB,GAAG,KAAKV,QAAzB;AACD,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWY,aAAX,KAA6B,KAAjC,EAAwC;AAC7CD,MAAAA,iBAAiB,GAAG,KAAKR,MAAzB;AACD;;AAED,WAAOQ,iBAAP;AACD;;AAEDV,EAAAA,QAAQ,GAAG;AACT,QAAI,KAAKD,KAAL,CAAWa,YAAX,KAA4B,KAAhC,EAAuC;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAKf,KAAL,CAAWgB,kBAAX;AACA,UAAIV,QAAQ,GAAG,YAAf;AACA,WAAKI,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACD;AACF;;AAEDH,EAAAA,MAAM,GAAG;AACP,QAAIG,QAAQ,GAAG,UAAf;AACA,SAAKI,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACD;;AAEDF,EAAAA,OAAO,GAAG;AACR,QAAIE,QAAQ,GAAG,WAAf;AACA,SAAKI,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACD;;AAtD0B;;AAyD7B,eAAeR,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./node.css\";\n\nclass Node extends Component {\n  constructor(props) {\n    super(props);\n    this.setStart = this.setStart.bind(this);\n    this.setEnd = this.setEnd.bind(this);\n    this.setWall = this.setWall.bind(this);\n\n    this.state = {\n      nodeType: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <div\n        className={this.state.nodeType}\n        onClick={this.getSelectionFunction()}\n      ></div>\n    );\n  }\n\n  componentDidMount() {\n    let nodeType = this.props.nodeType;\n    this.setState({ nodeType });\n  }\n\n  getSelectionFunction() {\n    let selectionFunction = this.setWall;\n    if (this.props.selectionMode === \"start\") {\n      selectionFunction = this.setStart;\n    } else if (this.props.selectionMode === \"end\") {\n      selectionFunction = this.setEnd;\n    }\n\n    return selectionFunction;\n  }\n\n  setStart() {\n    if (this.props.startNodeSet === false) {\n      console.log(\"HEREEE\");\n      this.props.handleStartNodeSet();\n      let nodeType = \"start-node\";\n      this.setState({ nodeType });\n    }\n  }\n\n  setEnd() {\n    let nodeType = \"end-node\";\n    this.setState({ nodeType });\n  }\n\n  setWall() {\n    let nodeType = \"wall-node\";\n    this.setState({ nodeType });\n  }\n}\n\nexport default Node;\n"]},"metadata":{},"sourceType":"module"}