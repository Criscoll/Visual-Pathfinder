{"ast":null,"code":"import _classCallCheck from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _objectWithoutProperties from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect}from'react';import dijkstras from'../Algorithms/dijkstras';import DFS from'../Algorithms/DFS';import BFS from'../Algorithms/BFS';import astar from'../Algorithms/astar';import recursiveDivision from'../Algorithms/recursiveDivision';import Node from'../components/Node';import'../styles/main.css';import*as enumerations from'../constants/enumerations';import*as constants from'../constants/constants';function useKeyPressed(targetKey){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),keyPressed=_useState2[0],setKeyPressed=_useState2[1];useEffect(function(){function downHandler(_ref){var key=_ref.key;if(key===targetKey){setKeyPressed(true);}}var upHandler=function upHandler(_ref2){var key=_ref2.key;if(key===targetKey){setKeyPressed(false);}};window.addEventListener('keydown',downHandler);window.addEventListener('keyup',upHandler);return function(){window.removeEventListener('keydown',downHandler);window.removeEventListener('keyup',upHandler);};},[targetKey]);return keyPressed;}function withMyHook(Component){return function WrappedComponent(props){var hookValue=useKeyPressed('w');var forwardedRef=props.forwardedRef,rest=_objectWithoutProperties(props,[\"forwardedRef\"]);return/*#__PURE__*/React.createElement(Component,Object.assign({ref:forwardedRef},rest,{weightKeyPressed:hookValue}));};}var Grid=/*#__PURE__*/function(_Component){_inherits(Grid,_Component);var _super=_createSuper(Grid);function Grid(props){var _this;_classCallCheck(this,Grid);_this=_super.call(this,props);_this.state={nodes:[],startNode:{},endNode:{},isDragging:false,dragNode:'wall'};_this.handleNodeClick=_this.handleNodeClick.bind(_assertThisInitialized(_this));_this.handleNodePressed=_this.handleNodePressed.bind(_assertThisInitialized(_this));_this.handleNodeReleased=_this.handleNodeReleased.bind(_assertThisInitialized(_this));_this.maxRow=constants.maxRow;_this.maxCol=constants.maxCol;return _this;}_createClass(Grid,[{key:\"componentDidMount\",value:function componentDidMount(){var nodes=[];for(var row=0;row<this.maxRow;row++){var currentRow=[];for(var col=0;col<this.maxCol;col++){var currentNode=this.createNode(row,col);currentRow.push(currentNode);}nodes.push(currentRow);}// !!! Maybe set this just before the algorithm runs in case you set walls etc\nfor(var _row=0;_row<this.maxRow;_row++){for(var _col=0;_col<this.maxCol;_col++){this.setAdjacentNodes(nodes[_row][_col],nodes);}}this.setState({nodes:nodes});}},{key:\"handleNodeClick\",value:function handleNodeClick(row,col){this.props.setGridModified();var nodes=this.copyNodes();var nodeType='wall-node';if(this.state.dragNode==='start'){nodeType='start-node';}else if(this.state.dragNode==='end'){nodeType='end-node';}if(nodeType!=='wall-node'){var rowColIndices=[-1,-1];var oldRow=-1;var oldCol=-1;if(nodeType==='start-node'){rowColIndices[0]=this.state.startNode.row;rowColIndices[1]=this.state.startNode.col;}else{rowColIndices[0]=this.state.endNode.row;rowColIndices[1]=this.state.endNode.col;}oldRow=rowColIndices[0];oldCol=rowColIndices[1];if(oldRow!==-1&&oldCol!==-1){document.getElementById(\"node-\".concat(oldRow,\"-\").concat(oldCol)).className='normal-node';document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className=nodeType;if(nodeType==='start-node'){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='start-node-dragged';this.setState({startNode:nodes[row][col]});}else{document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='end-node-dragged';this.setState({endNode:nodes[row][col]});}}}else{if(this.state.startNode.row===row&&this.state.startNode.col===col){return;}else if(this.state.endNode.row===row&&this.state.endNode.col===col){return;}else if(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className==='wall-node'||document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className==='weight-node'){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='normal-node';}else{if(this.props.weightKeyPressed&&!this.props.weightsDisabled){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='weight-node';}else{document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='wall-node';}}}// let audio = document.getElementById('click_sound').cloneNode(true);\n// audio.volume = 0.1;\n// audio.play();\n}},{key:\"handleNodePressed\",value:function handleNodePressed(row,column){var _this2=this;if(this.props.algorithmRunning){return;}var dragNode='wall';if(this.state.startNode.row===row&&this.state.startNode.col===column){dragNode='start';document.getElementById(\"node-\".concat(row,\"-\").concat(column)).className='start-node-dragged';}else if(this.state.endNode.row===row&&this.state.endNode.col===column){dragNode='end';document.getElementById(\"node-\".concat(row,\"-\").concat(column)).className='end-node-dragged';}this.setState({isDragging:true,dragNode:dragNode},function(){_this2.handleNodeClick(row,column);});}},{key:\"handleNodeReleased\",value:function handleNodeReleased(){var _this3=this;if(this.state.isDragging){setTimeout(function(){_this3.setState({isDragging:false});},50);}if(this.state.dragNode==='start'){document.getElementById(\"node-\".concat(this.state.startNode.row,\"-\").concat(this.state.startNode.col)).className='start-node';}else if(this.state.dragNode==='end'){document.getElementById(\"node-\".concat(this.state.endNode.row,\"-\").concat(this.state.endNode.col)).className='end-node';}this.setState({dragNode:'wall'});}},{key:\"handleDragBug\",value:function handleDragBug(e){e.preventDefault();}// Displays the nodes on the grid with their state values\n},{key:\"render\",value:function render(){var _this4=this;var nodes=this.state.nodes;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"grid\",onMouseLeave:this.handleNodeReleased,onDragStart:this.handleDragBug},nodes.map(function(row,rowIndex){return/*#__PURE__*/React.createElement(\"div\",{key:rowIndex,className:\"grid-container\"},row.map(function(node,colIndex){return/*#__PURE__*/React.createElement(Node,{key:colIndex,node:node,isDragging:_this4.state.isDragging,handleNodeClick:_this4.handleNodeClick,handleNodePressed:_this4.handleNodePressed,handleNodeReleased:_this4.handleNodeReleased,row:rowIndex,col:colIndex});}));})));}},{key:\"resetGrid\",value:function resetGrid(){for(var row=0;row<this.maxRow;row++){for(var col=0;col<this.maxCol;col++){if(['wall-node','visited-node','path-node','weight-node','weight-node-visited','weight-node-path'].includes(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className)){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='normal-node';}}}document.getElementById(\"node-\".concat(this.state.startNode.row,\"-\").concat(this.state.startNode.col)).className='start-node';document.getElementById(\"node-\".concat(this.state.endNode.row,\"-\").concat(this.state.endNode.col)).className='end-node';}},{key:\"setAdjacentNodes\",value:function setAdjacentNodes(node){var row=node.row;var col=node.col;if(row!==0){node.adjacentNodes.push({row:row-1,col:col});}if(row!==this.maxRow-1){node.adjacentNodes.push({row:row+1,col:col});}if(col!==0){node.adjacentNodes.push({row:row,col:col-1});}if(col!==this.maxCol-1){node.adjacentNodes.push({row:row,col:col+1});}}},{key:\"createNode\",value:function createNode(row,col){if(row===8&&col===10){var nodeObject={row:row,col:col,nodeType:'start-node',adjacentNodes:[],visited:false,dist:Infinity,prev:{}};this.setState({startNode:nodeObject});return nodeObject;}else if(row===8&&col===38){var _nodeObject={row:row,col:col,nodeType:'end-node',adjacentNodes:[],visited:false,dist:Infinity,prev:{}};this.setState({endNode:_nodeObject});return _nodeObject;}else{return{row:row,col:col,nodeType:'normal-node',adjacentNodes:[],visited:false,dist:Infinity,prev:{}};}}// performs a deep copy of the grid so that the state is not altered directly by accident.\n},{key:\"copyNodes\",value:function copyNodes(){var clone=[];this.state.nodes.forEach(function(x){var currentRow=[];x.forEach(function(nodes){var node=JSON.parse(JSON.stringify(nodes));node.dist=Infinity;// JSON.parse for some reason sets INFINITY to NULL in a deep copy\ncurrentRow.push(node);});clone.push(currentRow);});return clone;}},{key:\"removeWeights\",value:function removeWeights(){var weightsRemoved=false;for(var row=0;row<this.maxRow;row++){for(var col=0;col<this.maxCol;col++){if(['weight-node','weight-node-visited','weight-node-path'].includes(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className)){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='normal-node';weightsRemoved=true;}}}return weightsRemoved;}},{key:\"clearPaths\",value:function clearPaths(){for(var row=0;row<this.maxRow;row++){for(var col=0;col<this.maxCol;col++){if(['path-node','visited-node'].includes(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className)){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='normal-node';}else if(['weight-node-visited','weight-node-path'].includes(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className)){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='weight-node';}else if(['start-node-path'].includes(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className)){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='start-node';}else if(['end-node-found'].includes(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className)){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='end-node';}}}}},{key:\"generateMaze\",value:function generateMaze(mazeType){var _this5=this;this.resetGrid();this.props.setAlgorithmRunning(true);if(mazeType===enumerations.mazes.randomWalls){var _loop=function _loop(row){var _loop2=function _loop2(col){if(Math.random()*100>65&&!['start-node','end-node'].includes(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className)){setTimeout(function(){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='wall-node';},25*col);}};for(var col=0;col<_this5.maxCol;col++){_loop2(col);}};for(var row=0;row<this.maxRow;row++){_loop(row);}setTimeout(function(){_this5.props.setAlgorithmRunning(false);},25*this.maxCol);}else if(mazeType===enumerations.mazes.maze){var mazeDelay=recursiveDivision({row:0,col:0},this.maxCol,this.maxRow,{isHorizontal:null,holeIdx:null},0,false);setTimeout(function(){_this5.props.setAlgorithmRunning(false);},70*mazeDelay);}else if(mazeType===enumerations.mazes.randomMixed){var _loop3=function _loop3(_row2){var _loop4=function _loop4(col){if(Math.random()*100>65&&!['start-node','end-node'].includes(document.getElementById(\"node-\".concat(_row2,\"-\").concat(col)).className)){if(Math.floor(Math.random()*100)%2===0){setTimeout(function(){document.getElementById(\"node-\".concat(_row2,\"-\").concat(col)).className='wall-node';},25*col);}else{setTimeout(function(){document.getElementById(\"node-\".concat(_row2,\"-\").concat(col)).className='weight-node';},25*col);}}};for(var col=0;col<_this5.maxCol;col++){_loop4(col);}};for(var _row2=0;_row2<this.maxRow;_row2++){_loop3(_row2);}setTimeout(function(){_this5.props.setAlgorithmRunning(false);},25*this.maxCol);}else if(mazeType===enumerations.mazes.randomWeights){var _loop5=function _loop5(_row3){var _loop6=function _loop6(col){if(Math.random()*100>65&&!['start-node','end-node'].includes(document.getElementById(\"node-\".concat(_row3,\"-\").concat(col)).className)){setTimeout(function(){document.getElementById(\"node-\".concat(_row3,\"-\").concat(col)).className='weight-node';},25*col);}};for(var col=0;col<_this5.maxCol;col++){_loop6(col);}};for(var _row3=0;_row3<this.maxRow;_row3++){_loop5(_row3);}setTimeout(function(){_this5.props.setAlgorithmRunning(false);},25*this.maxCol);}else if(mazeType===enumerations.mazes.mazeWithWeights){var _mazeDelay=recursiveDivision({row:0,col:0},this.maxCol,this.maxRow,{isHorizontal:null,holeIdx:null},0,true);setTimeout(function(){_this5.props.setAlgorithmRunning(false);},70*_mazeDelay);}}// ================= PATHFINDING ALGORITHMS =====================\n},{key:\"runVisualiser\",value:function runVisualiser(algorithm){var nodes=this.copyNodes();var startNode=nodes[this.state.startNode.row][this.state.startNode.col];var endNode=nodes[this.state.endNode.row][this.state.endNode.col];var pathFound=true;var result;for(var row=0;row<this.maxRow;row++){for(var col=0;col<this.maxCol;col++){if(['weight-node-visited','weight-node-path'].includes(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className)){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='weight-node';}else if(['visited-node','path-node'].includes(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className)){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='normal-node';}else if(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className==='end-node-found'){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='end-node';}}}if(algorithm===enumerations.algorithms.dijkstras){result=dijkstras(nodes,startNode,endNode,this.maxRow,this.maxCol,pathFound);}else if(algorithm===enumerations.algorithms.DFS){result=DFS(nodes,startNode,endNode,this.maxRow,this.maxCol,pathFound);}else if(algorithm===enumerations.algorithms.BFS){result=BFS(nodes,startNode,endNode,this.maxRow,this.maxCol,pathFound);}else if(algorithm===enumerations.algorithms.AStar){result=astar(nodes,startNode,endNode,this.maxRow,this.maxCol,pathFound);}else{console.log('No algorithm selected');}this.visualisePath(result,startNode,endNode);}},{key:\"visualisePath\",value:function visualisePath(result,startNode,endNode){var _this6=this;var visitedNodes=result.visitedNodes;// visualise visited nodes\nvar _loop7=function _loop7(i){setTimeout(function(){var visited=visitedNodes[i];if(visited===startNode){document.getElementById(\"node-\".concat(visited.row,\"-\").concat(visited.col)).className='start-node-visited';}else if(visited===endNode){document.getElementById(\"node-\".concat(visited.row,\"-\").concat(visited.col)).className='end-node-visited';}else if(document.getElementById(\"node-\".concat(visited.row,\"-\").concat(visited.col)).className==='weight-node'){document.getElementById(\"node-\".concat(visited.row,\"-\").concat(visited.col)).className='weight-node-visited';}else{document.getElementById(\"node-\".concat(visited.row,\"-\").concat(visited.col)).className='visited-node';}// let audio = document.getElementById('loading_sound');\n// audio.volume = 0.5;\n// audio.play();\n},25*i);};for(var i=0;i<visitedNodes.length;i++){_loop7(i);}// visualise shortest path\nsetTimeout(function(){if(result.pathFound===false){document.getElementById('loading_sound').pause();document.getElementById('loading_sound').currentTime=0;_this6.props.setAlgorithmRunning(false);return;}var prev=endNode.prev;var pathNodes=[];while(prev.row!==startNode.row||prev.col!==startNode.col){pathNodes.push({row:prev.row,col:prev.col});prev=prev.prev;}pathNodes.push({row:startNode.row,col:startNode.col});var i=1;pathNodes.reverse().forEach(function(node){setTimeout(function(row,col,startNode){if(row===startNode.row&&col===startNode.col){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='start-node-path';}else if(document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className==='weight-node-visited'){document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='weight-node-path';}else{document.getElementById(\"node-\".concat(row,\"-\").concat(col)).className='path-node';}// let audio = document.getElementById('path_sound').cloneNode(true);\n// audio.volume = 0.3;\n// audio.play();\n},40*i,node.row,node.col,startNode);i++;});setTimeout(function(){document.getElementById(\"node-\".concat(_this6.state.endNode.row,\"-\").concat(_this6.state.endNode.col)).className='end-node-found';},40*i+1);// document.getElementById('loading_sound').pause();\n// document.getElementById('loading_sound').currentTime = 0;\n_this6.props.setAlgorithmRunning(false);_this6.props.setStats(pathNodes.length,visitedNodes.length);},25*visitedNodes.length);}}]);return Grid;}(Component);export default withMyHook(Grid);","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/Grid.jsx"],"names":["React","Component","useState","useEffect","dijkstras","DFS","BFS","astar","recursiveDivision","Node","enumerations","constants","useKeyPressed","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","withMyHook","WrappedComponent","props","hookValue","forwardedRef","rest","Grid","state","nodes","startNode","endNode","isDragging","dragNode","handleNodeClick","bind","handleNodePressed","handleNodeReleased","maxRow","maxCol","row","currentRow","col","currentNode","createNode","push","setAdjacentNodes","setState","setGridModified","copyNodes","nodeType","rowColIndices","oldRow","oldCol","document","getElementById","className","weightKeyPressed","weightsDisabled","column","algorithmRunning","setTimeout","e","preventDefault","handleDragBug","map","rowIndex","node","colIndex","includes","adjacentNodes","nodeObject","visited","dist","Infinity","prev","clone","forEach","x","JSON","parse","stringify","weightsRemoved","mazeType","resetGrid","setAlgorithmRunning","mazes","randomWalls","Math","random","maze","mazeDelay","isHorizontal","holeIdx","randomMixed","floor","randomWeights","mazeWithWeights","algorithm","pathFound","result","algorithms","AStar","console","log","visualisePath","visitedNodes","i","length","pause","currentTime","pathNodes","reverse","setStats"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport dijkstras from '../Algorithms/dijkstras';\nimport DFS from '../Algorithms/DFS';\nimport BFS from '../Algorithms/BFS';\nimport astar from '../Algorithms/astar';\nimport recursiveDivision from '../Algorithms/recursiveDivision';\nimport Node from '../components/Node';\nimport '../styles/main.css';\nimport * as enumerations from '../constants/enumerations';\nimport * as constants from '../constants/constants';\n\nfunction useKeyPressed(targetKey) {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  useEffect(() => {\n    function downHandler({ key }) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    const upHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [targetKey]);\n\n  return keyPressed;\n}\n\nfunction withMyHook(Component) {\n  return function WrappedComponent(props) {\n    const hookValue = useKeyPressed('w');\n    const { forwardedRef, ...rest } = props;\n    return (\n      <Component ref={forwardedRef} {...rest} weightKeyPressed={hookValue} />\n    );\n  };\n}\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.handleNodeClick = this.handleNodeClick.bind(this);\n    this.handleNodePressed = this.handleNodePressed.bind(this);\n    this.handleNodeReleased = this.handleNodeReleased.bind(this);\n    this.maxRow = constants.maxRow;\n    this.maxCol = constants.maxCol;\n  }\n\n  state = {\n    nodes: [],\n    startNode: {},\n    endNode: {},\n    isDragging: false,\n    dragNode: 'wall',\n  };\n\n  componentDidMount() {\n    let nodes = [];\n    for (let row = 0; row < this.maxRow; row++) {\n      let currentRow = [];\n      for (let col = 0; col < this.maxCol; col++) {\n        let currentNode = this.createNode(row, col);\n        currentRow.push(currentNode);\n      }\n      nodes.push(currentRow);\n    }\n\n    // !!! Maybe set this just before the algorithm runs in case you set walls etc\n    for (let row = 0; row < this.maxRow; row++) {\n      for (let col = 0; col < this.maxCol; col++) {\n        this.setAdjacentNodes(nodes[row][col], nodes);\n      }\n    }\n    this.setState({ nodes });\n  }\n\n  handleNodeClick(row, col) {\n    this.props.setGridModified();\n\n    let nodes = this.copyNodes();\n    let nodeType = 'wall-node';\n\n    if (this.state.dragNode === 'start') {\n      nodeType = 'start-node';\n    } else if (this.state.dragNode === 'end') {\n      nodeType = 'end-node';\n    }\n\n    if (nodeType !== 'wall-node') {\n      let rowColIndices = [-1, -1];\n      let oldRow = -1;\n      let oldCol = -1;\n\n      if (nodeType === 'start-node') {\n        rowColIndices[0] = this.state.startNode.row;\n        rowColIndices[1] = this.state.startNode.col;\n      } else {\n        rowColIndices[0] = this.state.endNode.row;\n        rowColIndices[1] = this.state.endNode.col;\n      }\n\n      oldRow = rowColIndices[0];\n      oldCol = rowColIndices[1];\n\n      if (oldRow !== -1 && oldCol !== -1) {\n        document.getElementById(`node-${oldRow}-${oldCol}`).className =\n          'normal-node';\n\n        document.getElementById(`node-${row}-${col}`).className = nodeType;\n\n        if (nodeType === 'start-node') {\n          document.getElementById(`node-${row}-${col}`).className =\n            'start-node-dragged';\n          this.setState({\n            startNode: nodes[row][col],\n          });\n        } else {\n          document.getElementById(`node-${row}-${col}`).className =\n            'end-node-dragged';\n          this.setState({\n            endNode: nodes[row][col],\n          });\n        }\n      }\n    } else {\n      if (\n        this.state.startNode.row === row &&\n        this.state.startNode.col === col\n      ) {\n        return;\n      } else if (\n        this.state.endNode.row === row &&\n        this.state.endNode.col === col\n      ) {\n        return;\n      } else if (\n        document.getElementById(`node-${row}-${col}`).className ===\n          'wall-node' ||\n        document.getElementById(`node-${row}-${col}`).className ===\n          'weight-node'\n      ) {\n        document.getElementById(`node-${row}-${col}`).className = 'normal-node';\n      } else {\n        if (this.props.weightKeyPressed && !this.props.weightsDisabled) {\n          document.getElementById(`node-${row}-${col}`).className =\n            'weight-node';\n        } else {\n          document.getElementById(`node-${row}-${col}`).className = 'wall-node';\n        }\n      }\n    }\n    // let audio = document.getElementById('click_sound').cloneNode(true);\n    // audio.volume = 0.1;\n    // audio.play();\n  }\n\n  handleNodePressed(row, column) {\n    if (this.props.algorithmRunning) {\n      return;\n    }\n\n    let dragNode = 'wall';\n    if (\n      this.state.startNode.row === row &&\n      this.state.startNode.col === column\n    ) {\n      dragNode = 'start';\n      document.getElementById(`node-${row}-${column}`).className =\n        'start-node-dragged';\n    } else if (\n      this.state.endNode.row === row &&\n      this.state.endNode.col === column\n    ) {\n      dragNode = 'end';\n      document.getElementById(`node-${row}-${column}`).className =\n        'end-node-dragged';\n    }\n\n    this.setState({ isDragging: true, dragNode: dragNode }, () => {\n      this.handleNodeClick(row, column);\n    });\n  }\n\n  handleNodeReleased() {\n    if (this.state.isDragging) {\n      setTimeout(() => {\n        this.setState({ isDragging: false });\n      }, 50);\n    }\n\n    if (this.state.dragNode === 'start') {\n      document.getElementById(\n        `node-${this.state.startNode.row}-${this.state.startNode.col}`\n      ).className = 'start-node';\n    } else if (this.state.dragNode === 'end') {\n      document.getElementById(\n        `node-${this.state.endNode.row}-${this.state.endNode.col}`\n      ).className = 'end-node';\n    }\n\n    this.setState({ dragNode: 'wall' });\n  }\n\n  handleDragBug(e) {\n    e.preventDefault();\n  }\n\n  // Displays the nodes on the grid with their state values\n  render() {\n    let { nodes } = this.state;\n    return (\n      <React.Fragment>\n        <div\n          className=\"grid\"\n          onMouseLeave={this.handleNodeReleased}\n          onDragStart={this.handleDragBug}\n        >\n          {nodes.map((row, rowIndex) => {\n            return (\n              <div key={rowIndex} className=\"grid-container\">\n                {row.map((node, colIndex) => {\n                  return (\n                    <Node\n                      key={colIndex}\n                      node={node}\n                      isDragging={this.state.isDragging}\n                      handleNodeClick={this.handleNodeClick}\n                      handleNodePressed={this.handleNodePressed}\n                      handleNodeReleased={this.handleNodeReleased}\n                      row={rowIndex}\n                      col={colIndex}\n                    ></Node>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  resetGrid() {\n    for (let row = 0; row < this.maxRow; row++) {\n      for (let col = 0; col < this.maxCol; col++) {\n        if (\n          [\n            'wall-node',\n            'visited-node',\n            'path-node',\n            'weight-node',\n            'weight-node-visited',\n            'weight-node-path',\n          ].includes(document.getElementById(`node-${row}-${col}`).className)\n        ) {\n          document.getElementById(`node-${row}-${col}`).className =\n            'normal-node';\n        }\n      }\n    }\n\n    document.getElementById(\n      `node-${this.state.startNode.row}-${this.state.startNode.col}`\n    ).className = 'start-node';\n\n    document.getElementById(\n      `node-${this.state.endNode.row}-${this.state.endNode.col}`\n    ).className = 'end-node';\n  }\n\n  setAdjacentNodes(node) {\n    let row = node.row;\n    let col = node.col;\n\n    if (row !== 0) {\n      node.adjacentNodes.push({ row: row - 1, col: col });\n    }\n\n    if (row !== this.maxRow - 1) {\n      node.adjacentNodes.push({ row: row + 1, col: col });\n    }\n\n    if (col !== 0) {\n      node.adjacentNodes.push({ row: row, col: col - 1 });\n    }\n\n    if (col !== this.maxCol - 1) {\n      node.adjacentNodes.push({ row: row, col: col + 1 });\n    }\n  }\n\n  createNode(row, col) {\n    if (row === 8 && col === 10) {\n      const nodeObject = {\n        row: row,\n        col: col,\n        nodeType: 'start-node',\n        adjacentNodes: [],\n        visited: false,\n        dist: Infinity,\n        prev: {},\n      };\n\n      this.setState({ startNode: nodeObject });\n      return nodeObject;\n    } else if (row === 8 && col === 38) {\n      const nodeObject = {\n        row: row,\n        col: col,\n        nodeType: 'end-node',\n        adjacentNodes: [],\n        visited: false,\n        dist: Infinity,\n        prev: {},\n      };\n      this.setState({ endNode: nodeObject });\n      return nodeObject;\n    } else {\n      return {\n        row: row,\n        col: col,\n        nodeType: 'normal-node',\n        adjacentNodes: [],\n        visited: false,\n        dist: Infinity,\n        prev: {},\n      };\n    }\n  }\n\n  // performs a deep copy of the grid so that the state is not altered directly by accident.\n  copyNodes() {\n    let clone = [];\n    this.state.nodes.forEach((x) => {\n      let currentRow = [];\n      x.forEach((nodes) => {\n        let node = JSON.parse(JSON.stringify(nodes));\n        node.dist = Infinity; // JSON.parse for some reason sets INFINITY to NULL in a deep copy\n        currentRow.push(node);\n      });\n\n      clone.push(currentRow);\n    });\n\n    return clone;\n  }\n\n  removeWeights() {\n    let weightsRemoved = false;\n    for (let row = 0; row < this.maxRow; row++) {\n      for (let col = 0; col < this.maxCol; col++) {\n        if (\n          ['weight-node', 'weight-node-visited', 'weight-node-path'].includes(\n            document.getElementById(`node-${row}-${col}`).className\n          )\n        ) {\n          document.getElementById(`node-${row}-${col}`).className =\n            'normal-node';\n          weightsRemoved = true;\n        }\n      }\n    }\n    return weightsRemoved;\n  }\n\n  clearPaths() {\n    for (let row = 0; row < this.maxRow; row++) {\n      for (let col = 0; col < this.maxCol; col++) {\n        if (\n          ['path-node', 'visited-node'].includes(\n            document.getElementById(`node-${row}-${col}`).className\n          )\n        ) {\n          document.getElementById(`node-${row}-${col}`).className =\n            'normal-node';\n        } else if (\n          ['weight-node-visited', 'weight-node-path'].includes(\n            document.getElementById(`node-${row}-${col}`).className\n          )\n        ) {\n          document.getElementById(`node-${row}-${col}`).className =\n            'weight-node';\n        } else if (\n          ['start-node-path'].includes(\n            document.getElementById(`node-${row}-${col}`).className\n          )\n        ) {\n          document.getElementById(`node-${row}-${col}`).className =\n            'start-node';\n        } else if (\n          ['end-node-found'].includes(\n            document.getElementById(`node-${row}-${col}`).className\n          )\n        ) {\n          document.getElementById(`node-${row}-${col}`).className = 'end-node';\n        }\n      }\n    }\n  }\n\n  generateMaze(mazeType) {\n    this.resetGrid();\n    this.props.setAlgorithmRunning(true);\n\n    if (mazeType === enumerations.mazes.randomWalls) {\n      for (let row = 0; row < this.maxRow; row++) {\n        for (let col = 0; col < this.maxCol; col++) {\n          if (\n            Math.random() * 100 > 65 &&\n            !['start-node', 'end-node'].includes(\n              document.getElementById(`node-${row}-${col}`).className\n            )\n          ) {\n            setTimeout(() => {\n              document.getElementById(`node-${row}-${col}`).className =\n                'wall-node';\n            }, 25 * col);\n          }\n        }\n      }\n\n      setTimeout(() => {\n        this.props.setAlgorithmRunning(false);\n      }, 25 * this.maxCol);\n    } else if (mazeType === enumerations.mazes.maze) {\n      const mazeDelay = recursiveDivision(\n        { row: 0, col: 0 },\n        this.maxCol,\n        this.maxRow,\n        { isHorizontal: null, holeIdx: null },\n        0,\n        false\n      );\n\n      setTimeout(() => {\n        this.props.setAlgorithmRunning(false);\n      }, 70 * mazeDelay);\n    } else if (mazeType === enumerations.mazes.randomMixed) {\n      for (let row = 0; row < this.maxRow; row++) {\n        for (let col = 0; col < this.maxCol; col++) {\n          if (\n            Math.random() * 100 > 65 &&\n            !['start-node', 'end-node'].includes(\n              document.getElementById(`node-${row}-${col}`).className\n            )\n          ) {\n            if (Math.floor(Math.random() * 100) % 2 === 0) {\n              setTimeout(() => {\n                document.getElementById(`node-${row}-${col}`).className =\n                  'wall-node';\n              }, 25 * col);\n            } else {\n              setTimeout(() => {\n                document.getElementById(`node-${row}-${col}`).className =\n                  'weight-node';\n              }, 25 * col);\n            }\n          }\n        }\n      }\n\n      setTimeout(() => {\n        this.props.setAlgorithmRunning(false);\n      }, 25 * this.maxCol);\n    } else if (mazeType === enumerations.mazes.randomWeights) {\n      for (let row = 0; row < this.maxRow; row++) {\n        for (let col = 0; col < this.maxCol; col++) {\n          if (\n            Math.random() * 100 > 65 &&\n            !['start-node', 'end-node'].includes(\n              document.getElementById(`node-${row}-${col}`).className\n            )\n          ) {\n            setTimeout(() => {\n              document.getElementById(`node-${row}-${col}`).className =\n                'weight-node';\n            }, 25 * col);\n          }\n        }\n      }\n\n      setTimeout(() => {\n        this.props.setAlgorithmRunning(false);\n      }, 25 * this.maxCol);\n    } else if (mazeType === enumerations.mazes.mazeWithWeights) {\n      const mazeDelay = recursiveDivision(\n        { row: 0, col: 0 },\n        this.maxCol,\n        this.maxRow,\n        { isHorizontal: null, holeIdx: null },\n        0,\n        true\n      );\n\n      setTimeout(() => {\n        this.props.setAlgorithmRunning(false);\n      }, 70 * mazeDelay);\n    }\n  }\n\n  // ================= PATHFINDING ALGORITHMS =====================\n\n  runVisualiser(algorithm) {\n    let nodes = this.copyNodes();\n    let startNode = nodes[this.state.startNode.row][this.state.startNode.col];\n    let endNode = nodes[this.state.endNode.row][this.state.endNode.col];\n    let pathFound = true;\n    let result;\n\n    for (let row = 0; row < this.maxRow; row++) {\n      for (let col = 0; col < this.maxCol; col++) {\n        if (\n          ['weight-node-visited', 'weight-node-path'].includes(\n            document.getElementById(`node-${row}-${col}`).className\n          )\n        ) {\n          document.getElementById(`node-${row}-${col}`).className =\n            'weight-node';\n        } else if (\n          ['visited-node', 'path-node'].includes(\n            document.getElementById(`node-${row}-${col}`).className\n          )\n        ) {\n          document.getElementById(`node-${row}-${col}`).className =\n            'normal-node';\n        } else if (\n          document.getElementById(`node-${row}-${col}`).className ===\n          'end-node-found'\n        ) {\n          document.getElementById(`node-${row}-${col}`).className = 'end-node';\n        }\n      }\n    }\n\n    if (algorithm === enumerations.algorithms.dijkstras) {\n      result = dijkstras(\n        nodes,\n        startNode,\n        endNode,\n        this.maxRow,\n        this.maxCol,\n        pathFound\n      );\n    } else if (algorithm === enumerations.algorithms.DFS) {\n      result = DFS(\n        nodes,\n        startNode,\n        endNode,\n        this.maxRow,\n        this.maxCol,\n        pathFound\n      );\n    } else if (algorithm === enumerations.algorithms.BFS) {\n      result = BFS(\n        nodes,\n        startNode,\n        endNode,\n        this.maxRow,\n        this.maxCol,\n        pathFound\n      );\n    } else if (algorithm === enumerations.algorithms.AStar) {\n      result = astar(\n        nodes,\n        startNode,\n        endNode,\n        this.maxRow,\n        this.maxCol,\n        pathFound\n      );\n    } else {\n      console.log('No algorithm selected');\n    }\n\n    this.visualisePath(result, startNode, endNode);\n  }\n\n  visualisePath(result, startNode, endNode) {\n    let visitedNodes = result.visitedNodes;\n\n    // visualise visited nodes\n    for (let i = 0; i < visitedNodes.length; i++) {\n      setTimeout(() => {\n        let visited = visitedNodes[i];\n\n        if (visited === startNode) {\n          document.getElementById(\n            `node-${visited.row}-${visited.col}`\n          ).className = 'start-node-visited';\n        } else if (visited === endNode) {\n          document.getElementById(\n            `node-${visited.row}-${visited.col}`\n          ).className = 'end-node-visited';\n        } else if (\n          document.getElementById(`node-${visited.row}-${visited.col}`)\n            .className === 'weight-node'\n        ) {\n          document.getElementById(\n            `node-${visited.row}-${visited.col}`\n          ).className = 'weight-node-visited';\n        } else {\n          document.getElementById(\n            `node-${visited.row}-${visited.col}`\n          ).className = 'visited-node';\n        }\n\n        // let audio = document.getElementById('loading_sound');\n        // audio.volume = 0.5;\n        // audio.play();\n      }, 25 * i);\n    }\n\n    // visualise shortest path\n    setTimeout(() => {\n      if (result.pathFound === false) {\n        document.getElementById('loading_sound').pause();\n        document.getElementById('loading_sound').currentTime = 0;\n        this.props.setAlgorithmRunning(false);\n        return;\n      }\n\n      let prev = endNode.prev;\n\n      let pathNodes = [];\n      while (prev.row !== startNode.row || prev.col !== startNode.col) {\n        pathNodes.push({ row: prev.row, col: prev.col });\n        prev = prev.prev;\n      }\n\n      pathNodes.push({ row: startNode.row, col: startNode.col });\n\n      let i = 1;\n      pathNodes.reverse().forEach((node) => {\n        setTimeout(\n          (row, col, startNode) => {\n            if (row === startNode.row && col === startNode.col) {\n              document.getElementById(`node-${row}-${col}`).className =\n                'start-node-path';\n            } else if (\n              document.getElementById(`node-${row}-${col}`).className ===\n              'weight-node-visited'\n            ) {\n              document.getElementById(`node-${row}-${col}`).className =\n                'weight-node-path';\n            } else {\n              document.getElementById(`node-${row}-${col}`).className =\n                'path-node';\n            }\n\n            // let audio = document.getElementById('path_sound').cloneNode(true);\n            // audio.volume = 0.3;\n            // audio.play();\n          },\n          40 * i,\n          node.row,\n          node.col,\n          startNode\n        );\n        i++;\n      });\n\n      setTimeout(() => {\n        document.getElementById(\n          `node-${this.state.endNode.row}-${this.state.endNode.col}`\n        ).className = 'end-node-found';\n      }, 40 * i + 1);\n\n      // document.getElementById('loading_sound').pause();\n      // document.getElementById('loading_sound').currentTime = 0;\n      this.props.setAlgorithmRunning(false);\n      this.props.setStats(pathNodes.length, visitedNodes.length);\n    }, 25 * visitedNodes.length);\n  }\n}\n\nexport default withMyHook(Grid);\n"]},"metadata":{},"sourceType":"module"}