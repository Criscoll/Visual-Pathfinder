{"ast":null,"code":"export default function DFS(grid,startNode,endNode){var visitedNodes=[];var stack=[];stack.push(startNode);while(stack.length!==0){var node=stack.pop();if(Object.keys(node).length===0){return{visitedNodes:visitedNodes,pathFound:false};}visitedNodes.push(node);if(node.row===endNode.row&&node.col===endNode.col){return{visitedNodes:visitedNodes,pathFound:true};}if(node.visited===false){node.visited=true;for(var i=0;i<node.adjacentNodes.length;i++){var adjacentRow=node.adjacentNodes[i].row;var adjacentCol=node.adjacentNodes[i].col;if(grid[adjacentRow][adjacentCol].visited===false&&document.getElementById(\"node-\".concat(adjacentRow,\"-\").concat(adjacentCol)).className!=='wall-node'){stack.push(grid[adjacentRow][adjacentCol]);grid[adjacentRow][adjacentCol].prev=node;}}}}return{visitedNodes:visitedNodes,pathFound:false};}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/Algorithms/DFS.js"],"names":["DFS","grid","startNode","endNode","visitedNodes","stack","push","length","node","pop","Object","keys","pathFound","row","col","visited","i","adjacentNodes","adjacentRow","adjacentCol","document","getElementById","className","prev"],"mappings":"AAAA,cAAe,SAASA,CAAAA,GAAT,CAAaC,IAAb,CAAmBC,SAAnB,CAA8BC,OAA9B,CAAuC,CACpD,GAAIC,CAAAA,YAAY,CAAG,EAAnB,CACA,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEAA,KAAK,CAACC,IAAN,CAAWJ,SAAX,EAEA,MAAOG,KAAK,CAACE,MAAN,GAAiB,CAAxB,CAA2B,CACzB,GAAIC,CAAAA,IAAI,CAAGH,KAAK,CAACI,GAAN,EAAX,CAEA,GAAIC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBD,MAAlB,GAA6B,CAAjC,CAAoC,CAClC,MAAO,CAAEH,YAAY,CAAEA,YAAhB,CAA8BQ,SAAS,CAAE,KAAzC,CAAP,CACD,CAEDR,YAAY,CAACE,IAAb,CAAkBE,IAAlB,EAEA,GAAIA,IAAI,CAACK,GAAL,GAAaV,OAAO,CAACU,GAArB,EAA4BL,IAAI,CAACM,GAAL,GAAaX,OAAO,CAACW,GAArD,CAA0D,CACxD,MAAO,CAAEV,YAAY,CAAEA,YAAhB,CAA8BQ,SAAS,CAAE,IAAzC,CAAP,CACD,CAED,GAAIJ,IAAI,CAACO,OAAL,GAAiB,KAArB,CAA4B,CAC1BP,IAAI,CAACO,OAAL,CAAe,IAAf,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGR,IAAI,CAACS,aAAL,CAAmBV,MAAvC,CAA+CS,CAAC,EAAhD,CAAoD,CAClD,GAAIE,CAAAA,WAAW,CAAGV,IAAI,CAACS,aAAL,CAAmBD,CAAnB,EAAsBH,GAAxC,CACA,GAAIM,CAAAA,WAAW,CAAGX,IAAI,CAACS,aAAL,CAAmBD,CAAnB,EAAsBF,GAAxC,CAEA,GACEb,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,EAA+BJ,OAA/B,GAA2C,KAA3C,EACAK,QAAQ,CAACC,cAAT,gBAAgCH,WAAhC,aAA+CC,WAA/C,GACGG,SADH,GACiB,WAHnB,CAIE,CACAjB,KAAK,CAACC,IAAN,CAAWL,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,CAAX,EACAlB,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,EAA+BI,IAA/B,CAAsCf,IAAtC,CACD,CACF,CACF,CACF,CACD,MAAO,CAAEJ,YAAY,CAAEA,YAAhB,CAA8BQ,SAAS,CAAE,KAAzC,CAAP,CACD","sourcesContent":["export default function DFS(grid, startNode, endNode) {\n  let visitedNodes = [];\n  let stack = [];\n\n  stack.push(startNode);\n\n  while (stack.length !== 0) {\n    let node = stack.pop();\n\n    if (Object.keys(node).length === 0) {\n      return { visitedNodes: visitedNodes, pathFound: false };\n    }\n\n    visitedNodes.push(node);\n\n    if (node.row === endNode.row && node.col === endNode.col) {\n      return { visitedNodes: visitedNodes, pathFound: true };\n    }\n\n    if (node.visited === false) {\n      node.visited = true;\n\n      for (let i = 0; i < node.adjacentNodes.length; i++) {\n        let adjacentRow = node.adjacentNodes[i].row;\n        let adjacentCol = node.adjacentNodes[i].col;\n\n        if (\n          grid[adjacentRow][adjacentCol].visited === false &&\n          document.getElementById(`node-${adjacentRow}-${adjacentCol}`)\n            .className !== 'wall-node'\n        ) {\n          stack.push(grid[adjacentRow][adjacentCol]);\n          grid[adjacentRow][adjacentCol].prev = node;\n        }\n      }\n    }\n  }\n  return { visitedNodes: visitedNodes, pathFound: false };\n}\n"]},"metadata":{},"sourceType":"module"}