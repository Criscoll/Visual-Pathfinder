{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/grid.jsx\";\nimport React, { Component } from \"react\";\nimport Node from \"./node/node\";\nimport \"./grid.css\";\n\nclass Grid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nodes: [],\n      startNodeSet: false,\n      endNodeSet: false\n    };\n  }\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    console.log(\"GRID RENDERED\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, nodes.map((row, rowIndex) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: rowIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, row.map((node, colIndex) => {\n        return /*#__PURE__*/React.createElement(Node, {\n          key: colIndex,\n          nodeType: node.nodeType,\n          selectionMode: this.props.selectionMode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 19\n          }\n        });\n      }));\n    }));\n  }\n\n  componentDidMount() {\n    let nodes = [];\n\n    for (let row = 0; row < 15; row++) {\n      let currentRow = [];\n\n      for (let col = 0; col < 30; col++) {\n        let currentNode = {\n          row: row,\n          col: col,\n          nodeType: \"normal-node\"\n        };\n        currentRow.push(currentNode);\n      }\n\n      nodes.push(currentRow);\n    }\n\n    this.setState({\n      nodes\n    });\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/grid.jsx"],"names":["React","Component","Node","Grid","state","nodes","startNodeSet","endNodeSet","render","console","log","map","row","rowIndex","node","colIndex","nodeType","props","selectionMode","componentDidMount","currentRow","col","currentNode","push","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,YAAY,EAAE,KAFR;AAGNC,MAAAA,UAAU,EAAE;AAHN,KADmB;AAAA;;AAO3BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,KAAK,CAACM,GAAN,CAAU,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAC5B,0BACE;AAAK,QAAA,GAAG,EAAEA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,GAAG,CAACD,GAAJ,CAAQ,CAACG,IAAD,EAAOC,QAAP,KAAoB;AAC3B,4BACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,QADP;AAEE,UAAA,QAAQ,EAAED,IAAI,CAACE,QAFjB;AAGE,UAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC,aAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,OARA,CADH,CADF;AAaD,KAdA,CADH,CADF;AAmBD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAId,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIO,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjC,UAAIQ,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjC,YAAIC,WAAW,GAAG;AAChBV,UAAAA,GAAG,EAAEA,GADW;AAEhBS,UAAAA,GAAG,EAAEA,GAFW;AAGhBL,UAAAA,QAAQ,EAAE;AAHM,SAAlB;AAKAI,QAAAA,UAAU,CAACG,IAAX,CAAgBD,WAAhB;AACD;;AACDjB,MAAAA,KAAK,CAACkB,IAAN,CAAWH,UAAX;AACD;;AACD,SAAKI,QAAL,CAAc;AAAEnB,MAAAA;AAAF,KAAd;AACD;;AA9C0B;;AAiD7B,eAAeF,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Node from \"./node/node\";\nimport \"./grid.css\";\n\nclass Grid extends Component {\n  state = {\n    nodes: [],\n    startNodeSet: false,\n    endNodeSet: false,\n  };\n\n  render() {\n    const { nodes } = this.state;\n    console.log(\"GRID RENDERED\");\n    return (\n      <div className=\"grid\">\n        {nodes.map((row, rowIndex) => {\n          return (\n            <div key={rowIndex}>\n              {row.map((node, colIndex) => {\n                return (\n                  <Node\n                    key={colIndex}\n                    nodeType={node.nodeType}\n                    selectionMode={this.props.selectionMode}\n                  ></Node>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    let nodes = [];\n    for (let row = 0; row < 15; row++) {\n      let currentRow = [];\n      for (let col = 0; col < 30; col++) {\n        let currentNode = {\n          row: row,\n          col: col,\n          nodeType: \"normal-node\",\n        };\n        currentRow.push(currentNode);\n      }\n      nodes.push(currentRow);\n    }\n    this.setState({ nodes });\n  }\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}