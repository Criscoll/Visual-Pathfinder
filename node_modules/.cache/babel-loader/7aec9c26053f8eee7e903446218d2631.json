{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/node/node.jsx\";\nimport React, { Component } from \"react\";\nimport \"./node.css\";\n\nclass Node extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleEndClick = this.handleEndClick.bind(this);\n    this.handleWallClick = this.handleWallClick.bind(this);\n    this.state = {\n      nodeType: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let nodeType = this.props.node.nodeType;\n    this.setState({\n      nodeType\n    });\n  }\n\n  handleStartClick() {\n    if (this.props.startNodeSet === false) {\n      this.props.handleStartNodeSet(this.props.node.row, this.props.node.col);\n      let nodeType = \"start-node\";\n      this.setState({\n        nodeType\n      });\n    }\n  }\n\n  handleEndClick() {\n    let nodeType = \"end-node\";\n    this.setState({\n      nodeType\n    });\n  }\n\n  handleWallClick() {\n    let nodeType = \"wall-node\";\n    this.setState({\n      nodeType\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.nodeType,\n      onClick: this.getClickHandler(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    });\n  }\n\n  getClickHandler() {\n    let clickHandler = this.handleWallClick;\n\n    if (this.props.selectionMode === \"start\") {\n      clickHandler = this.handleStartClick;\n    } else if (this.props.selectionMode === \"end\") {\n      clickHandler = this.handleEndClick;\n    }\n\n    return clickHandler;\n  }\n\n}\n\nexport default Node;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/node/node.jsx"],"names":["React","Component","Node","constructor","props","handleStartClick","bind","handleEndClick","handleWallClick","state","nodeType","componentDidMount","node","setState","startNodeSet","handleStartNodeSet","row","col","render","getClickHandler","clickHandler","selectionMode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AAEA,SAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAID,QAAQ,GAAG,KAAKN,KAAL,CAAWQ,IAAX,CAAgBF,QAA/B;AACA,SAAKG,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd;AACD;;AAEDL,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKD,KAAL,CAAWU,YAAX,KAA4B,KAAhC,EAAuC;AACrC,WAAKV,KAAL,CAAWW,kBAAX,CAA8B,KAAKX,KAAL,CAAWQ,IAAX,CAAgBI,GAA9C,EAAmD,KAAKZ,KAAL,CAAWQ,IAAX,CAAgBK,GAAnE;AACA,UAAIP,QAAQ,GAAG,YAAf;AACA,WAAKG,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACD;AACF;;AAEDH,EAAAA,cAAc,GAAG;AACf,QAAIG,QAAQ,GAAG,UAAf;AACA,SAAKG,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd;AACD;;AAEDF,EAAAA,eAAe,GAAG;AAChB,QAAIE,QAAQ,GAAG,WAAf;AACA,SAAKG,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAE,KAAKT,KAAL,CAAWC,QADxB;AAEE,MAAA,OAAO,EAAE,KAAKS,eAAL,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAEDA,EAAAA,eAAe,GAAG;AAChB,QAAIC,YAAY,GAAG,KAAKZ,eAAxB;;AACA,QAAI,KAAKJ,KAAL,CAAWiB,aAAX,KAA6B,OAAjC,EAA0C;AACxCD,MAAAA,YAAY,GAAG,KAAKf,gBAApB;AACD,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWiB,aAAX,KAA6B,KAAjC,EAAwC;AAC7CD,MAAAA,YAAY,GAAG,KAAKb,cAApB;AACD;;AAED,WAAOa,YAAP;AACD;;AArD0B;;AAwD7B,eAAelB,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./node.css\";\n\nclass Node extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleEndClick = this.handleEndClick.bind(this);\n    this.handleWallClick = this.handleWallClick.bind(this);\n\n    this.state = {\n      nodeType: \"\",\n    };\n  }\n\n  componentDidMount() {\n    let nodeType = this.props.node.nodeType;\n    this.setState({ nodeType });\n  }\n\n  handleStartClick() {\n    if (this.props.startNodeSet === false) {\n      this.props.handleStartNodeSet(this.props.node.row, this.props.node.col);\n      let nodeType = \"start-node\";\n      this.setState({ nodeType });\n    }\n  }\n\n  handleEndClick() {\n    let nodeType = \"end-node\";\n    this.setState({ nodeType });\n  }\n\n  handleWallClick() {\n    let nodeType = \"wall-node\";\n    this.setState({ nodeType });\n  }\n\n  render() {\n    return (\n      <div\n        className={this.state.nodeType}\n        onClick={this.getClickHandler()}\n      ></div>\n    );\n  }\n\n  getClickHandler() {\n    let clickHandler = this.handleWallClick;\n    if (this.props.selectionMode === \"start\") {\n      clickHandler = this.handleStartClick;\n    } else if (this.props.selectionMode === \"end\") {\n      clickHandler = this.handleEndClick;\n    }\n\n    return clickHandler;\n  }\n}\n\nexport default Node;\n"]},"metadata":{},"sourceType":"module"}