{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/src/App.js\";\nimport React, { Component } from 'react';\nimport Grid from './containers/Grid';\nimport Toolbar from './containers/Toolbar';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      algorithm: '',\n      algorithmRunning: false\n    };\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.handleGoClick = this.handleGoClick.bind(this);\n    this.setAlgorithmRunning = this.setAlgorithmRunning.bind(this);\n    this.gridRef = React.createRef(); // used to handle reseting the grid.\n\n    this.algorithmEnum = Object.freeze({\n      dijkstras: 1,\n      DFS: 2,\n      AStar: 3\n    });\n  }\n\n  handleResetClick() {\n    this.gridRef.current.resetGrid();\n  }\n\n  handleGoClick() {\n    this.gridRef.current.visualiseDijkstras();\n    this.setState({\n      algorithmRunning: true\n    });\n  }\n\n  setAlgorithmRunning(state) {\n    this.setState({\n      algorithmRunning: state\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      handleResetClick: this.handleResetClick,\n      handleGoClick: this.handleGoClick,\n      algorithmRunning: this.state.algorithmRunning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      ref: this.gridRef,\n      setAlgorithmRunning: this.setAlgorithmRunning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/App.js"],"names":["React","Component","Grid","Toolbar","Main","constructor","props","state","algorithm","algorithmRunning","handleResetClick","bind","handleGoClick","setAlgorithmRunning","gridRef","createRef","algorithmEnum","Object","freeze","dijkstras","DFS","AStar","current","resetGrid","visualiseDijkstras","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAKA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBF,IAAzB,CAA8B,IAA9B,CAA3B;AAEA,SAAKG,OAAL,GAAed,KAAK,CAACe,SAAN,EAAf,CAZiB,CAYiB;;AAElC,SAAKC,aAAL,GAAqBC,MAAM,CAACC,MAAP,CAAc;AAAEC,MAAAA,SAAS,EAAE,CAAb;AAAgBC,MAAAA,GAAG,EAAE,CAArB;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAAd,CAArB;AACD;;AAEDX,EAAAA,gBAAgB,GAAG;AACjB,SAAKI,OAAL,CAAaQ,OAAb,CAAqBC,SAArB;AACD;;AAEDX,EAAAA,aAAa,GAAG;AACd,SAAKE,OAAL,CAAaQ,OAAb,CAAqBE,kBAArB;AACA,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,gBAAgB,EAAE;AAApB,KAAd;AACD;;AAEDI,EAAAA,mBAAmB,CAACN,KAAD,EAAQ;AACzB,SAAKkB,QAAL,CAAc;AAAEhB,MAAAA,gBAAgB,EAAEF;AAApB,KAAd;AACD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,gBAAgB,EAAE,KAAKhB,gBADzB;AAEE,MAAA,aAAa,EAAE,KAAKE,aAFtB;AAGE,MAAA,gBAAgB,EAAE,KAAKL,KAAL,CAAWE,gBAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAE,KAAKK,OADZ;AAEE,MAAA,mBAAmB,EAAE,KAAKD,mBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAeD;;AA/C0B;;AAkD7B,eAAeT,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Grid from './containers/Grid';\nimport Toolbar from './containers/Toolbar';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      algorithm: '',\n      algorithmRunning: false,\n    };\n\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.handleGoClick = this.handleGoClick.bind(this);\n    this.setAlgorithmRunning = this.setAlgorithmRunning.bind(this);\n\n    this.gridRef = React.createRef(); // used to handle reseting the grid.\n\n    this.algorithmEnum = Object.freeze({ dijkstras: 1, DFS: 2, AStar: 3 });\n  }\n\n  handleResetClick() {\n    this.gridRef.current.resetGrid();\n  }\n\n  handleGoClick() {\n    this.gridRef.current.visualiseDijkstras();\n    this.setState({ algorithmRunning: true });\n  }\n\n  setAlgorithmRunning(state) {\n    this.setState({ algorithmRunning: state });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Toolbar\n          handleResetClick={this.handleResetClick}\n          handleGoClick={this.handleGoClick}\n          algorithmRunning={this.state.algorithmRunning}\n        />\n\n        {/* <Results pathStatus={this.state.pathStatus} /> */}\n        <Grid\n          ref={this.gridRef}\n          setAlgorithmRunning={this.setAlgorithmRunning}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}