{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/src/containers/TutorialModal.jsx\";\nimport React, { useState } from 'react';\nimport ReactDom from 'react-dom';\nimport AppLogo from \"../images/pathfinder-logo.svg\";\nimport PlacingObstacles from '../images/placing-obstacles.gif';\nimport { AiOutlineRight, AiOutlineLeft, AiFillCloseCircle } from 'react-icons/ai';\nexport default function TutorialModal(props) {\n  const [pageNum, setPageNum] = useState(1);\n\n  function incrementPage(val) {\n    if (val < 0 && pageNum > 1) {\n      setPageNum(prevPageNum => prevPageNum + val);\n    }\n\n    if (val > 0 && pageNum < 9) {\n      setPageNum(prevPageNum => prevPageNum + val);\n    }\n  }\n\n  return ReactDom.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-styles\",\n    onClick: e => {\n      e.stopPropagation();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AiFillCloseCircle, {\n    className: \"close-button\",\n    onClick: () => props.setModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, pageNum, \"/9\"), /*#__PURE__*/React.createElement(AiOutlineRight, {\n    className: pageNum === 9 ? 'arrow-icons-disabled right' : 'arrow-icons right',\n    onClick: () => incrementPage(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AiOutlineLeft, {\n    className: pageNum === 1 ? 'arrow-icons-disabled left' : 'arrow-icons left',\n    onClick: () => incrementPage(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, pageNum === 1 ? /*#__PURE__*/React.createElement(PageOne, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 30\n    }\n  }) : null, pageNum === 2 ? /*#__PURE__*/React.createElement(PageTwo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 30\n    }\n  }) : null, pageNum === 3 ? /*#__PURE__*/React.createElement(PageThree, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }\n  }) : null)))), document.getElementById('portal'));\n}\n\nfunction PageOne() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Welcome to the Visual Pathfinder Tool! \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"This short tutorial will help you get started with the application. If at any point this gets too boring to read feel free to close this tutorial to jump right in!\"), \"PlacingObstacles\"));\n}\n\nfunction PageTwo() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-two\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"About this app \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"A pathfinding algorithm is an algorithm that typically attempts to find the shortest distance between two points. This app provides a playground for such algorithms, to help visualise the way they behave and compare.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"A quick note: On this grid, these algoritms run very fast! So fast in fact I have manually slowed down their searching behaviour to help actually visualise what is happening, its not fun seeing everything happen in a milisecond or two :)\")));\n}\n\nfunction PageThree() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-three\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Placing Walls and Weights\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Walls are an impenetrable obstacle that prevents potential paths. Weights are also an obstacle, but can be traversed, one weight node is equivalent to 10 normal nodes in 'distance'.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Walls can be placed by clicking and dragging across the grid. Holding the 'W' key while clicking will place weight nodes instead. Click the obstacles again to remove them.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: PlacingObstacles,\n    alt: \"placing walls gif\",\n    width: \"90%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/TutorialModal.jsx"],"names":["React","useState","ReactDom","PlacingObstacles","AiOutlineRight","AiOutlineLeft","AiFillCloseCircle","TutorialModal","props","pageNum","setPageNum","incrementPage","val","prevPageNum","createPortal","e","stopPropagation","setModalOpen","document","getElementById","PageOne","PageTwo","PageThree"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDom from 'react-dom';\nimport AppLogo from '../images/pathfinder-logo.svg';\nimport PlacingObstacles from '../images/placing-obstacles.gif';\n\nimport {\n  AiOutlineRight,\n  AiOutlineLeft,\n  AiFillCloseCircle,\n} from 'react-icons/ai';\n\nexport default function TutorialModal(props) {\n  const [pageNum, setPageNum] = useState(1);\n\n  function incrementPage(val) {\n    if (val < 0 && pageNum > 1) {\n      setPageNum((prevPageNum) => prevPageNum + val);\n    }\n\n    if (val > 0 && pageNum < 9) {\n      setPageNum((prevPageNum) => prevPageNum + val);\n    }\n  }\n\n  return ReactDom.createPortal(\n    <React.Fragment>\n      <div className=\"modal-overlay\">\n        <div\n          className=\"modal-styles\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <AiFillCloseCircle\n            className=\"close-button\"\n            onClick={() => props.setModalOpen(false)}\n          />\n          <div className=\"page-number\">{pageNum}/9</div>\n          <AiOutlineRight\n            className={\n              pageNum === 9 ? 'arrow-icons-disabled right' : 'arrow-icons right'\n            }\n            onClick={() => incrementPage(1)}\n          />\n          <AiOutlineLeft\n            className={\n              pageNum === 1 ? 'arrow-icons-disabled left' : 'arrow-icons left'\n            }\n            onClick={() => incrementPage(-1)}\n          />\n\n          <div className=\"modal-content\">\n            {pageNum === 1 ? <PageOne /> : null}\n            {pageNum === 2 ? <PageTwo /> : null}\n            {pageNum === 3 ? <PageThree /> : null}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>,\n    document.getElementById('portal')\n  );\n}\n\nfunction PageOne() {\n  return (\n    <React.Fragment>\n      <div className=\"page-one\">\n        <h1>Welcome to the Visual Pathfinder Tool! </h1>\n        <p>\n          This short tutorial will help you get started with the application. If\n          at any point this gets too boring to read feel free to close this\n          tutorial to jump right in!\n        </p>\n        PlacingObstacles\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction PageTwo() {\n  return (\n    <React.Fragment>\n      <div className=\"page-two\">\n        <h1>About this app </h1>\n        <p>\n          A pathfinding algorithm is an algorithm that typically attempts to\n          find the shortest distance between two points. This app provides a\n          playground for such algorithms, to help visualise the way they behave\n          and compare.\n        </p>\n\n        <p>\n          A quick note: On this grid, these algoritms run very fast! So fast in\n          fact I have manually slowed down their searching behaviour to help\n          actually visualise what is happening, its not fun seeing everything\n          happen in a milisecond or two :)\n        </p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction PageThree() {\n  return (\n    <React.Fragment>\n      <div className=\"page-three\">\n        <h1>Placing Walls and Weights</h1>\n        <p>\n          Walls are an impenetrable obstacle that prevents potential paths.\n          Weights are also an obstacle, but can be traversed, one weight node is\n          equivalent to 10 normal nodes in 'distance'.\n        </p>\n\n        <p>\n          Walls can be placed by clicking and dragging across the grid. Holding\n          the 'W' key while clicking will place weight nodes instead. Click the\n          obstacles again to remove them.\n        </p>\n        <img src={PlacingObstacles} alt=\"placing walls gif\" width=\"90%\" />\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}