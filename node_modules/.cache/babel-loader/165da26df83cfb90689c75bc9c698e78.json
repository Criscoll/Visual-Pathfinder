{"ast":null,"code":"export default function DFS(grid, startNode, endNode) {\n  let visitedNodes = [];\n  let stack = [];\n  stack.push(startNode);\n\n  while (stack.length !== 0) {\n    let node = stack.pop();\n\n    if (Object.keys(node).length === 0) {\n      return {\n        visitedNodes: visitedNodes,\n        pathFound: false\n      };\n    }\n\n    visitedNodes.push(node);\n\n    if (node.row === endNode.row && node.col === endNode.col) {\n      return {\n        visitedNodes: visitedNodes,\n        pathFound: true\n      };\n    }\n\n    if (node.visited === false) {\n      node.visited = true;\n\n      for (let i = 0; i < node.adjacentNodes.length; i++) {\n        let adjacentRow = node.adjacentNodes[i].row;\n        let adjacentCol = node.adjacentNodes[i].col;\n\n        if (grid[adjacentRow][adjacentCol].visited === false && document.getElementById(`node-${adjacentRow}-${adjacentCol}`).className !== 'wall-node') {\n          stack.push(grid[adjacentRow][adjacentCol]);\n          grid[adjacentRow][adjacentCol].prev = node;\n        }\n      }\n    }\n  }\n\n  return {\n    visitedNodes: visitedNodes,\n    pathFound: false\n  };\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/Algorithms/DFS.js"],"names":["DFS","grid","startNode","endNode","visitedNodes","stack","push","length","node","pop","Object","keys","pathFound","row","col","visited","i","adjacentNodes","adjacentRow","adjacentCol","document","getElementById","className","prev"],"mappings":"AAAA,eAAe,SAASA,GAAT,CAAaC,IAAb,EAAmBC,SAAnB,EAA8BC,OAA9B,EAAuC;AACpD,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,KAAK,GAAG,EAAZ;AAEAA,EAAAA,KAAK,CAACC,IAAN,CAAWJ,SAAX;;AAEA,SAAOG,KAAK,CAACE,MAAN,KAAiB,CAAxB,EAA2B;AACzB,QAAIC,IAAI,GAAGH,KAAK,CAACI,GAAN,EAAX;;AAEA,QAAIC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBD,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,aAAO;AAAEH,QAAAA,YAAY,EAAEA,YAAhB;AAA8BQ,QAAAA,SAAS,EAAE;AAAzC,OAAP;AACD;;AAEDR,IAAAA,YAAY,CAACE,IAAb,CAAkBE,IAAlB;;AAEA,QAAIA,IAAI,CAACK,GAAL,KAAaV,OAAO,CAACU,GAArB,IAA4BL,IAAI,CAACM,GAAL,KAAaX,OAAO,CAACW,GAArD,EAA0D;AACxD,aAAO;AAAEV,QAAAA,YAAY,EAAEA,YAAhB;AAA8BQ,QAAAA,SAAS,EAAE;AAAzC,OAAP;AACD;;AAED,QAAIJ,IAAI,CAACO,OAAL,KAAiB,KAArB,EAA4B;AAC1BP,MAAAA,IAAI,CAACO,OAAL,GAAe,IAAf;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,aAAL,CAAmBV,MAAvC,EAA+CS,CAAC,EAAhD,EAAoD;AAClD,YAAIE,WAAW,GAAGV,IAAI,CAACS,aAAL,CAAmBD,CAAnB,EAAsBH,GAAxC;AACA,YAAIM,WAAW,GAAGX,IAAI,CAACS,aAAL,CAAmBD,CAAnB,EAAsBF,GAAxC;;AAEA,YACEb,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,EAA+BJ,OAA/B,KAA2C,KAA3C,IACAK,QAAQ,CAACC,cAAT,CAAyB,QAAOH,WAAY,IAAGC,WAAY,EAA3D,EACGG,SADH,KACiB,WAHnB,EAIE;AACAjB,UAAAA,KAAK,CAACC,IAAN,CAAWL,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,CAAX;AACAlB,UAAAA,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,EAA+BI,IAA/B,GAAsCf,IAAtC;AACD;AACF;AACF;AACF;;AACD,SAAO;AAAEJ,IAAAA,YAAY,EAAEA,YAAhB;AAA8BQ,IAAAA,SAAS,EAAE;AAAzC,GAAP;AACD","sourcesContent":["export default function DFS(grid, startNode, endNode) {\n  let visitedNodes = [];\n  let stack = [];\n\n  stack.push(startNode);\n\n  while (stack.length !== 0) {\n    let node = stack.pop();\n\n    if (Object.keys(node).length === 0) {\n      return { visitedNodes: visitedNodes, pathFound: false };\n    }\n\n    visitedNodes.push(node);\n\n    if (node.row === endNode.row && node.col === endNode.col) {\n      return { visitedNodes: visitedNodes, pathFound: true };\n    }\n\n    if (node.visited === false) {\n      node.visited = true;\n\n      for (let i = 0; i < node.adjacentNodes.length; i++) {\n        let adjacentRow = node.adjacentNodes[i].row;\n        let adjacentCol = node.adjacentNodes[i].col;\n\n        if (\n          grid[adjacentRow][adjacentCol].visited === false &&\n          document.getElementById(`node-${adjacentRow}-${adjacentCol}`)\n            .className !== 'wall-node'\n        ) {\n          stack.push(grid[adjacentRow][adjacentCol]);\n          grid[adjacentRow][adjacentCol].prev = node;\n        }\n      }\n    }\n  }\n  return { visitedNodes: visitedNodes, pathFound: false };\n}\n"]},"metadata":{},"sourceType":"module"}