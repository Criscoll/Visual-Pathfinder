{"ast":null,"code":"export default function DFS(grid, startNode, endNode) {\n  let visitedNodes = [];\n  let queue = [];\n  queue.push(startNode);\n  startNode.visited = true;\n\n  while (queue.length !== 0) {\n    let node = queue.shift();\n\n    if (Object.keys(node).length === 0) {\n      return {\n        visitedNodes: visitedNodes,\n        pathFound: false\n      };\n    }\n\n    visitedNodes.push(node);\n\n    if (node.row === endNode.row && node.col === endNode.col) {\n      return {\n        visitedNodes: visitedNodes,\n        pathFound: true\n      };\n    }\n\n    for (let i = 0; i < node.adjacentNodes.length; i++) {\n      let adjacentRow = node.adjacentNodes[i].row;\n      let adjacentCol = node.adjacentNodes[i].col;\n\n      if (grid[adjacentRow][adjacentCol].visited === false && document.getElementById(`node-${adjacentRow}-${adjacentCol}`).className !== 'wall-node') {\n        queue.push(grid[adjacentRow][adjacentCol]);\n        grid[adjacentRow][adjacentCol].prev = node;\n        grid[adjacentRow][adjacentCol].visited = true;\n      }\n    }\n  }\n\n  return {\n    visitedNodes: visitedNodes,\n    pathFound: false\n  };\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/Algorithms/BFS.js"],"names":["DFS","grid","startNode","endNode","visitedNodes","queue","push","visited","length","node","shift","Object","keys","pathFound","row","col","i","adjacentNodes","adjacentRow","adjacentCol","document","getElementById","className","prev"],"mappings":"AAAA,eAAe,SAASA,GAAT,CAAaC,IAAb,EAAmBC,SAAnB,EAA8BC,OAA9B,EAAuC;AACpD,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,KAAK,GAAG,EAAZ;AAEAA,EAAAA,KAAK,CAACC,IAAN,CAAWJ,SAAX;AACAA,EAAAA,SAAS,CAACK,OAAV,GAAoB,IAApB;;AAEA,SAAOF,KAAK,CAACG,MAAN,KAAiB,CAAxB,EAA2B;AACzB,QAAIC,IAAI,GAAGJ,KAAK,CAACK,KAAN,EAAX;;AAEA,QAAIC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBD,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,aAAO;AAAEJ,QAAAA,YAAY,EAAEA,YAAhB;AAA8BS,QAAAA,SAAS,EAAE;AAAzC,OAAP;AACD;;AAEDT,IAAAA,YAAY,CAACE,IAAb,CAAkBG,IAAlB;;AAEA,QAAIA,IAAI,CAACK,GAAL,KAAaX,OAAO,CAACW,GAArB,IAA4BL,IAAI,CAACM,GAAL,KAAaZ,OAAO,CAACY,GAArD,EAA0D;AACxD,aAAO;AAAEX,QAAAA,YAAY,EAAEA,YAAhB;AAA8BS,QAAAA,SAAS,EAAE;AAAzC,OAAP;AACD;;AAED,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACQ,aAAL,CAAmBT,MAAvC,EAA+CQ,CAAC,EAAhD,EAAoD;AAClD,UAAIE,WAAW,GAAGT,IAAI,CAACQ,aAAL,CAAmBD,CAAnB,EAAsBF,GAAxC;AACA,UAAIK,WAAW,GAAGV,IAAI,CAACQ,aAAL,CAAmBD,CAAnB,EAAsBD,GAAxC;;AAEA,UACEd,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,EAA+BZ,OAA/B,KAA2C,KAA3C,IACAa,QAAQ,CAACC,cAAT,CAAyB,QAAOH,WAAY,IAAGC,WAAY,EAA3D,EACGG,SADH,KACiB,WAHnB,EAIE;AACAjB,QAAAA,KAAK,CAACC,IAAN,CAAWL,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,CAAX;AACAlB,QAAAA,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,EAA+BI,IAA/B,GAAsCd,IAAtC;AACAR,QAAAA,IAAI,CAACiB,WAAD,CAAJ,CAAkBC,WAAlB,EAA+BZ,OAA/B,GAAyC,IAAzC;AACD;AACF;AACF;;AACD,SAAO;AAAEH,IAAAA,YAAY,EAAEA,YAAhB;AAA8BS,IAAAA,SAAS,EAAE;AAAzC,GAAP;AACD","sourcesContent":["export default function DFS(grid, startNode, endNode) {\n  let visitedNodes = [];\n  let queue = [];\n\n  queue.push(startNode);\n  startNode.visited = true;\n\n  while (queue.length !== 0) {\n    let node = queue.shift();\n\n    if (Object.keys(node).length === 0) {\n      return { visitedNodes: visitedNodes, pathFound: false };\n    }\n\n    visitedNodes.push(node);\n\n    if (node.row === endNode.row && node.col === endNode.col) {\n      return { visitedNodes: visitedNodes, pathFound: true };\n    }\n\n    for (let i = 0; i < node.adjacentNodes.length; i++) {\n      let adjacentRow = node.adjacentNodes[i].row;\n      let adjacentCol = node.adjacentNodes[i].col;\n\n      if (\n        grid[adjacentRow][adjacentCol].visited === false &&\n        document.getElementById(`node-${adjacentRow}-${adjacentCol}`)\n          .className !== 'wall-node'\n      ) {\n        queue.push(grid[adjacentRow][adjacentCol]);\n        grid[adjacentRow][adjacentCol].prev = node;\n        grid[adjacentRow][adjacentCol].visited = true;\n      }\n    }\n  }\n  return { visitedNodes: visitedNodes, pathFound: false };\n}\n"]},"metadata":{},"sourceType":"module"}