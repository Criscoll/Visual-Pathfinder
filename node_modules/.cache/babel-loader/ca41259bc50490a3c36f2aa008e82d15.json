{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/src/components/MazeGeneratorButton.jsx\";\nimport React, { useState } from 'react';\nimport '../styles/main.css';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport * as enumerations from '../constants/enumerations';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    zIndex: 1000\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  button: {\n    fontFamily: 'Ubuntu',\n    fontSize: '2.8vh',\n    color: 'white'\n  },\n  dropDownMenu: {\n    alignItems: 'center',\n    zIndex: 1000,\n    width: '25vh',\n    backgroundColor: '#3775A0',\n    color: 'white'\n  },\n  dropDownText: {\n    fontFamily: 'Ubuntu',\n    fontSize: '2.5vh'\n  }\n}));\nexport default function MazeGeneratorButton(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [maze] = useState('Maze Generator');\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    classes: {\n      root: classes.button\n    },\n    ref: anchorRef,\n    \"aria-controls\": open ? 'menu-list-grow' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleToggle,\n    disabled: props.algorithmRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, maze, /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, ({\n    TransitionProps,\n    placement\n  }) => /*#__PURE__*/React.createElement(Grow, Object.assign({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuList, {\n    autoFocusItem: open,\n    id: \"menu-list-grow\",\n    onKeyDown: handleListKeyDown,\n    classes: {\n      root: classes.dropDownMenu\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    classes: {\n      root: classes.dropDownText\n    },\n    onClick: e => {\n      handleClose(e);\n      props.generateMaze(enumerations.mazes.randomWalls);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Random Walls\"), /*#__PURE__*/React.createElement(MenuItem, {\n    classes: {\n      root: classes.dropDownText\n    },\n    onClick: e => {\n      handleClose(e);\n      props.generateMaze(enumerations.mazes.randomWeights);\n    },\n    disabled: [enumerations.algorithms.BFS, enumerations.algorithms.DFS].includes(props.algorithm) ? true : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Random Weights\"), /*#__PURE__*/React.createElement(MenuItem, {\n    classes: {\n      root: classes.dropDownText\n    },\n    onClick: e => {\n      handleClose(e);\n      props.generateMaze(enumerations.mazes.randomMixed);\n    },\n    disabled: [enumerations.algorithms.BFS, enumerations.algorithms.DFS].includes(props.algorithm) ? true : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"Random Mixed\"), /*#__PURE__*/React.createElement(MenuItem, {\n    classes: {\n      root: classes.dropDownText\n    },\n    onClick: e => {\n      handleClose(e);\n      props.generateMaze(enumerations.mazes.maze);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, \"Maze\"), /*#__PURE__*/React.createElement(MenuItem, {\n    classes: {\n      root: classes.dropDownText\n    },\n    onClick: e => {\n      handleClose(e);\n      props.generateMaze(enumerations.mazes.mazeWithWeights);\n    },\n    disabled: [enumerations.algorithms.BFS, enumerations.algorithms.DFS].includes(props.algorithm) ? true : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, \"Maze with Weights\"))))))));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/components/MazeGeneratorButton.jsx"],"names":["React","useState","Button","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","makeStyles","ArrowDropDownIcon","enumerations","useStyles","theme","root","display","zIndex","paper","marginRight","spacing","button","fontFamily","fontSize","color","dropDownMenu","alignItems","width","backgroundColor","dropDownText","MazeGeneratorButton","props","classes","open","setOpen","anchorRef","useRef","maze","handleToggle","prevOpen","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","useEffect","focus","undefined","algorithmRunning","TransitionProps","placement","transformOrigin","e","generateMaze","mazes","randomWalls","randomWeights","algorithms","BFS","DFS","includes","algorithm","randomMixed","mazeWithWeights"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/main.css';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport * as enumerations from '../constants/enumerations';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    zIndex: 1000,\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n  button: {\n    fontFamily: 'Ubuntu',\n    fontSize: '2.8vh',\n    color: 'white',\n  },\n  dropDownMenu: {\n    alignItems: 'center',\n    zIndex: 1000,\n    width: '25vh',\n    backgroundColor: '#3775A0',\n    color: 'white',\n  },\n  dropDownText: {\n    fontFamily: 'Ubuntu',\n    fontSize: '2.5vh',\n  },\n}));\n\nexport default function MazeGeneratorButton(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const [maze] = useState('Maze Generator');\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Button\n          classes={{ root: classes.button }}\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          disabled={props.algorithmRunning}\n        >\n          {maze}\n          <ArrowDropDownIcon />\n        </Button>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === 'bottom' ? 'center top' : 'center bottom',\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList\n                    autoFocusItem={open}\n                    id=\"menu-list-grow\"\n                    onKeyDown={handleListKeyDown}\n                    classes={{ root: classes.dropDownMenu }}\n                  >\n                    <MenuItem\n                      classes={{ root: classes.dropDownText }}\n                      onClick={(e) => {\n                        handleClose(e);\n                        props.generateMaze(enumerations.mazes.randomWalls);\n                      }}\n                    >\n                      Random Walls\n                    </MenuItem>\n                    <MenuItem\n                      classes={{ root: classes.dropDownText }}\n                      onClick={(e) => {\n                        handleClose(e);\n                        props.generateMaze(enumerations.mazes.randomWeights);\n                      }}\n                      disabled={\n                        [\n                          enumerations.algorithms.BFS,\n                          enumerations.algorithms.DFS,\n                        ].includes(props.algorithm)\n                          ? true\n                          : null\n                      }\n                    >\n                      Random Weights\n                    </MenuItem>\n                    <MenuItem\n                      classes={{ root: classes.dropDownText }}\n                      onClick={(e) => {\n                        handleClose(e);\n                        props.generateMaze(enumerations.mazes.randomMixed);\n                      }}\n                      disabled={\n                        [\n                          enumerations.algorithms.BFS,\n                          enumerations.algorithms.DFS,\n                        ].includes(props.algorithm)\n                          ? true\n                          : null\n                      }\n                    >\n                      Random Mixed\n                    </MenuItem>\n                    <MenuItem\n                      classes={{ root: classes.dropDownText }}\n                      onClick={(e) => {\n                        handleClose(e);\n                        props.generateMaze(enumerations.mazes.maze);\n                      }}\n                    >\n                      Maze\n                    </MenuItem>\n                    <MenuItem\n                      classes={{ root: classes.dropDownText }}\n                      onClick={(e) => {\n                        handleClose(e);\n                        props.generateMaze(enumerations.mazes.mazeWithWeights);\n                      }}\n                      disabled={\n                        [\n                          enumerations.algorithms.BFS,\n                          enumerations.algorithms.DFS,\n                        ].includes(props.algorithm)\n                          ? true\n                          : null\n                      }\n                    >\n                      Maze with Weights\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}