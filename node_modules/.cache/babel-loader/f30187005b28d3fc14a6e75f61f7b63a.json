{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx\";\nimport React, { useState, useEffect } from 'react';\nexport default function Stats(props) {\n  const [currStats, setCurrStats] = useState({});\n  const [prevStats, setPrevStats] = useState({});\n  currStats = { ...props\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, props.pathLength && props.nodesChecked ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Current Run: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Alogrithm used: \", props.algorithmUsed), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Path Length: \", props.pathLength), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Nodes Visited: \", props.nodesChecked - 1)) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prev-stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, prevStats ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Previous Run: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Alogrithm used: \", prevStats.algorithmUsed), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Path Length: \", prevStats.pathLength), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Nodes Visited: \", prevStats.nodesChecked - 1)) : null));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx"],"names":["React","useState","useEffect","Stats","props","currStats","setCurrStats","prevStats","setPrevStats","pathLength","nodesChecked","algorithmUsed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAI,EAAAA,SAAS,GAAG,EAAE,GAAGD;AAAL,GAAZ;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACK,UAAN,IAAoBL,KAAK,CAACM,YAA1B,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBN,KAAK,CAACO,aAA1B,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBP,KAAK,CAACK,UAAvB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBL,KAAK,CAACM,YAAN,GAAqB,CAAxC,CAJF,CADD,GAOG,IARN,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,gBACR,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBA,SAAS,CAACI,aAA9B,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBJ,SAAS,CAACE,UAA3B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBF,SAAS,CAACG,YAAV,GAAyB,CAA5C,CAJF,CADQ,GAON,IARN,CAZF,CADF;AAyBD","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Stats(props) {\n  const [currStats, setCurrStats] = useState({});\n  const [prevStats, setPrevStats] = useState({});\n\n  currStats = { ...props };\n\n  return (\n    <React.Fragment>\n      <div className=\"stats-container\">\n        {props.pathLength && props.nodesChecked ? (\n          <React.Fragment>\n            <p className=\"label\">Current Run: </p>\n            <p>Alogrithm used: {props.algorithmUsed}</p>\n            <p>Path Length: {props.pathLength}</p>\n            <p>Nodes Visited: {props.nodesChecked - 1}</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n\n      <div className=\"prev-stats-container\">\n        {prevStats ? (\n          <React.Fragment>\n            <p className=\"label\">Previous Run: </p>\n            <p>Alogrithm used: {prevStats.algorithmUsed}</p>\n            <p>Path Length: {prevStats.pathLength}</p>\n            <p>Nodes Visited: {prevStats.nodesChecked - 1}</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}