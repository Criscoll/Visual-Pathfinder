{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/grid.jsx\";\nimport React, { Component } from \"react\";\nimport Node from \"./node/node\";\nimport \"./grid.css\";\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [],\n      startNodeSet: false,\n      endNodeSet: false\n    };\n    this.handleStartNodeSet = this.handleStartNodeSet.bind(this);\n  }\n\n  handleStartNodeSet(newRow, newColumn) {\n    let nodes = this.state.nodes;\n    let rowIndex = -1;\n    let colIndex = -1;\n\n    for (let i = 0; i < nodes.length; i++) {\n      colIndex = nodes[i].findIndex(currentColumn => {\n        return currentColumn.nodeType === \"start-node\";\n      });\n\n      if (rowIndex != -1) {\n        rowIndex = i;\n        break;\n      }\n    }\n\n    if (rowIndex != -1 && colIndex != -1) {\n      nodes[rowIndex][colIndex].nodeType = \"normal-node\";\n      nodes[newRow][newColumn].nodeType = \"start-node\";\n      this.setState({\n        nodes\n      });\n    }\n  }\n\n  handleWallNodeSet() {}\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, nodes.map((row, rowIndex) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: rowIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, row.map((node, colIndex) => {\n        return /*#__PURE__*/React.createElement(Node, {\n          key: colIndex,\n          node: node,\n          selectionMode: this.props.selectionMode,\n          handleStartNodeSet: this.handleStartNodeSet,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }\n        });\n      }));\n    }));\n  }\n\n  componentDidMount() {\n    let nodes = [];\n\n    for (let row = 0; row < 15; row++) {\n      let currentRow = [];\n\n      for (let col = 0; col < 30; col++) {\n        let currentNode = {\n          row: row,\n          col: col,\n          nodeType: \"normal-node\"\n        };\n        currentRow.push(currentNode);\n      }\n\n      nodes.push(currentRow);\n    }\n\n    this.setState({\n      nodes\n    });\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid/grid.jsx"],"names":["React","Component","Node","Grid","constructor","props","state","nodes","startNodeSet","endNodeSet","handleStartNodeSet","bind","newRow","newColumn","rowIndex","colIndex","i","length","findIndex","currentColumn","nodeType","setState","handleWallNodeSet","render","map","row","node","selectionMode","componentDidMount","currentRow","col","currentNode","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Node from \"./node/node\";\nimport \"./grid.css\";\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStartNodeSet = this.handleStartNodeSet.bind(this);\n  }\n\n  state = {\n    nodes: [],\n    startNodeSet: false,\n    endNodeSet: false,\n  };\n\n  handleStartNodeSet(newRow, newColumn) {\n    let nodes = this.state.nodes;\n    let rowIndex = -1;\n    let colIndex = -1;\n    for (let i = 0; i < nodes.length; i++) {\n      colIndex = nodes[i].findIndex((currentColumn) => {\n        return currentColumn.nodeType === \"start-node\";\n      });\n\n      if (rowIndex != -1) {\n        rowIndex = i;\n        break;\n      }\n    }\n\n    if (rowIndex != -1 && colIndex != -1) {\n      nodes[rowIndex][colIndex].nodeType = \"normal-node\";\n      nodes[newRow][newColumn].nodeType = \"start-node\";\n\n      this.setState({ nodes });\n    }\n  }\n\n  handleWallNodeSet() {}\n\n  render() {\n    const { nodes } = this.state;\n\n    return (\n      <div className=\"grid\">\n        {nodes.map((row, rowIndex) => {\n          return (\n            <div key={rowIndex}>\n              {row.map((node, colIndex) => {\n                return (\n                  <Node\n                    key={colIndex}\n                    node={node}\n                    selectionMode={this.props.selectionMode}\n                    handleStartNodeSet={this.handleStartNodeSet}\n                  ></Node>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    let nodes = [];\n    for (let row = 0; row < 15; row++) {\n      let currentRow = [];\n      for (let col = 0; col < 30; col++) {\n        let currentNode = {\n          row: row,\n          col: col,\n          nodeType: \"normal-node\",\n        };\n        currentRow.push(currentNode);\n      }\n      nodes.push(currentRow);\n    }\n    this.setState({ nodes });\n  }\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}