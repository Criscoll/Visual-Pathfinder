{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx\";\nimport React from 'react';\nexport default function Stats(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, props.pathLength && props.nodesChecked ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Path Length: \", props.pathLength), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Nodes Visited: \", props.nodesChecked)) : null));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx"],"names":["React","Stats","props","pathLength","nodesChecked"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,UAAN,IAAoBD,KAAK,CAACE,YAA1B,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBF,KAAK,CAACC,UAAvB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBD,KAAK,CAACE,YAAzB,CAFF,CADD,GAKG,IANN,CADF,CADF;AAYD","sourcesContent":["import React from 'react';\n\nexport default function Stats(props) {\n  return (\n    <React.Fragment>\n      <div id=\"stats-container\">\n        {props.pathLength && props.nodesChecked ? (\n          <React.Fragment>\n            <p>Path Length: {props.pathLength}</p>\n            <p>Nodes Visited: {props.nodesChecked}</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}