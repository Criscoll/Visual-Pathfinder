{"ast":null,"code":"import _classCallCheck from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'../styles/main.css';var Node=/*#__PURE__*/function(_Component){_inherits(Node,_Component);var _super=_createSuper(Node);function Node(props){var _this;_classCallCheck(this,Node);_this=_super.call(this,props);_this.state={mounted:false};_this.handleMouseEnter=_this.handleMouseEnter.bind(_assertThisInitialized(_this));_this.handlePress=_this.handlePress.bind(_assertThisInitialized(_this));return _this;}_createClass(Node,[{key:\"handleMouseEnter\",value:function handleMouseEnter(){if(this.props.isDragging){this.props.handleNodeClick(this.props.row,this.props.col);}}},{key:\"handlePress\",value:function handlePress(){this.props.handleNodePressed(this.props.row,this.props.col);}// shouldComponentUpdate() is used to tell react whether or not this child component should re-render. By default it returns true such that\n// whenever the parent re-renders so does the child. The check here ensures that shouldComponentUpdate() returns false (don't re-render)\n// unless the nodeType of this Node component changes\n},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps){return this.props.resetClicked!==nextProps.resetClicked;}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{id:'node-'+this.props.row+'-'+this.props.col,className:this.props.node.nodeType,onMouseDown:this.handlePress,onMouseUp:this.props.handleNodeReleased,onMouseEnter:this.handleMouseEnter},/*#__PURE__*/React.createElement(\"i\",{className:\"material-icons walk\"},\"directions_walk\"),/*#__PURE__*/React.createElement(\"i\",{className:\"material-icons flag\"},\"flag\"),/*#__PURE__*/React.createElement(\"i\",{className:\"material-icons weight\"},\"fitness_center\"));}}]);return Node;}(Component);export default Node;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/components/Node.jsx"],"names":["React","Component","Node","props","state","mounted","handleMouseEnter","bind","handlePress","isDragging","handleNodeClick","row","col","handleNodePressed","nextProps","resetClicked","node","nodeType","handleNodeReleased"],"mappings":"k1BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,oBAAP,C,GAEMC,CAAAA,I,4FACJ,cAAYC,KAAZ,CAAmB,sCACjB,uBAAMA,KAAN,EADiB,MAKnBC,KALmB,CAKX,CACNC,OAAO,CAAE,KADH,CALW,CAEjB,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB,CACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB,CAHiB,aAIlB,C,4EAKkB,CACjB,GAAI,KAAKJ,KAAL,CAAWM,UAAf,CAA2B,CACzB,KAAKN,KAAL,CAAWO,eAAX,CAA2B,KAAKP,KAAL,CAAWQ,GAAtC,CAA2C,KAAKR,KAAL,CAAWS,GAAtD,EACD,CACF,C,iDAEa,CACZ,KAAKT,KAAL,CAAWU,iBAAX,CAA6B,KAAKV,KAAL,CAAWQ,GAAxC,CAA6C,KAAKR,KAAL,CAAWS,GAAxD,EACD,CAED;AACA;AACA;oEACsBE,S,CAAW,CAC/B,MAAO,MAAKX,KAAL,CAAWY,YAAX,GAA4BD,SAAS,CAACC,YAA7C,CACD,C,uCAEQ,CACP,mBACE,2BACE,EAAE,CAAE,QAAU,KAAKZ,KAAL,CAAWQ,GAArB,CAA2B,GAA3B,CAAiC,KAAKR,KAAL,CAAWS,GADlD,CAEE,SAAS,CAAE,KAAKT,KAAL,CAAWa,IAAX,CAAgBC,QAF7B,CAGE,WAAW,CAAE,KAAKT,WAHpB,CAIE,SAAS,CAAE,KAAKL,KAAL,CAAWe,kBAJxB,CAKE,YAAY,CAAE,KAAKZ,gBALrB,eAOE,yBAAG,SAAS,CAAC,qBAAb,oBAPF,cAQE,yBAAG,SAAS,CAAC,qBAAb,SARF,cASE,yBAAG,SAAS,CAAC,uBAAb,mBATF,CADF,CAaD,C,kBAzCgBL,S,EA4CnB,cAAeC,CAAAA,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/main.css';\n\nclass Node extends Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handlePress = this.handlePress.bind(this);\n  }\n  state = {\n    mounted: false,\n  };\n\n  handleMouseEnter() {\n    if (this.props.isDragging) {\n      this.props.handleNodeClick(this.props.row, this.props.col);\n    }\n  }\n\n  handlePress() {\n    this.props.handleNodePressed(this.props.row, this.props.col);\n  }\n\n  // shouldComponentUpdate() is used to tell react whether or not this child component should re-render. By default it returns true such that\n  // whenever the parent re-renders so does the child. The check here ensures that shouldComponentUpdate() returns false (don't re-render)\n  // unless the nodeType of this Node component changes\n  shouldComponentUpdate(nextProps) {\n    return this.props.resetClicked !== nextProps.resetClicked;\n  }\n\n  render() {\n    return (\n      <div\n        id={'node-' + this.props.row + '-' + this.props.col}\n        className={this.props.node.nodeType}\n        onMouseDown={this.handlePress}\n        onMouseUp={this.props.handleNodeReleased}\n        onMouseEnter={this.handleMouseEnter}\n      >\n        <i className=\"material-icons walk\">directions_walk</i>\n        <i className=\"material-icons flag\">flag</i>\n        <i className=\"material-icons weight\">fitness_center</i>\n      </div>\n    );\n  }\n}\n\nexport default Node;\n"]},"metadata":{},"sourceType":"module"}