{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid.jsx\";\nimport React, { Component } from \"react\";\nimport Node from \"./node/node\";\nimport \"./grid.css\";\n\nclass Grid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nodes: []\n    };\n  }\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, nodes.map((row, rowIndex) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: rowIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, row.map((node, colIndex) => {\n        console.log(node);\n        return /*#__PURE__*/React.createElement(Node, {\n          key: colIndex,\n          nodeType: node.nodeType,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }\n        });\n      }));\n    }));\n  }\n\n  componentDidMount() {\n    let nodes = [];\n\n    for (let row = 0; row < 15; row++) {\n      let currentRow = [];\n\n      for (let col = 0; col < 30; col++) {\n        let currentNode = {\n          row: row,\n          col: col,\n          nodeType: \"normal\"\n        };\n\n        if (col === 0 && row === 1) {\n          currentNode.nodeType = \"start\";\n        }\n\n        currentRow.push(currentNode);\n      }\n\n      nodes.push(currentRow);\n    }\n\n    this.setState({\n      nodes\n    });\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/grid.jsx"],"names":["React","Component","Node","Grid","state","nodes","render","map","row","rowIndex","node","colIndex","console","log","nodeType","componentDidMount","currentRow","col","currentNode","push","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACNC,MAAAA,KAAK,EAAE;AADD,KADmB;AAAA;;AAK3BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,CAACE,GAAN,CAAU,CAACC,GAAD,EAAMC,QAAN,KAAmB;AAC5B,0BACE;AAAK,QAAA,GAAG,EAAEA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,GAAG,CAACD,GAAJ,CAAQ,CAACG,IAAD,EAAOC,QAAP,KAAoB;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,4BAAO,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEC,QAAX;AAAqB,UAAA,QAAQ,EAAED,IAAI,CAACI,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAHA,CADH,CADF;AAQD,KATA,CADH,CADF;AAcD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIV,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIG,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjC,UAAIQ,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AACjC,YAAIC,WAAW,GAAG;AAChBV,UAAAA,GAAG,EAAEA,GADW;AAEhBS,UAAAA,GAAG,EAAEA,GAFW;AAGhBH,UAAAA,QAAQ,EAAE;AAHM,SAAlB;;AAKA,YAAIG,GAAG,KAAK,CAAR,IAAaT,GAAG,KAAK,CAAzB,EAA4B;AAC1BU,UAAAA,WAAW,CAACJ,QAAZ,GAAuB,OAAvB;AACD;;AACDE,QAAAA,UAAU,CAACG,IAAX,CAAgBD,WAAhB;AACD;;AACDb,MAAAA,KAAK,CAACc,IAAN,CAAWH,UAAX;AACD;;AACD,SAAKI,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd;AACD;;AAzC0B;;AA4C7B,eAAeF,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Node from \"./node/node\";\nimport \"./grid.css\";\n\nclass Grid extends Component {\n  state = {\n    nodes: [],\n  };\n\n  render() {\n    const { nodes } = this.state;\n    return (\n      <div className=\"grid\">\n        {nodes.map((row, rowIndex) => {\n          return (\n            <div key={rowIndex}>\n              {row.map((node, colIndex) => {\n                console.log(node);\n                return <Node key={colIndex} nodeType={node.nodeType}></Node>;\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    let nodes = [];\n    for (let row = 0; row < 15; row++) {\n      let currentRow = [];\n      for (let col = 0; col < 30; col++) {\n        let currentNode = {\n          row: row,\n          col: col,\n          nodeType: \"normal\",\n        };\n        if (col === 0 && row === 1) {\n          currentNode.nodeType = \"start\";\n        }\n        currentRow.push(currentNode);\n      }\n      nodes.push(currentRow);\n    }\n    this.setState({ nodes });\n  }\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}