{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/src/containers/Info.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport * as enumerations from '../constants/algorithmEnum';\nexport default function Info(props) {\n  const [renderedText, setRenderedText] = useState('No Algorithm Selected');\n  console.log(props);\n  useEffect(() => {\n    if (props.selectedAlgorithm === enumerations.algorithms.none) {\n      setRenderedText( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 23\n        }\n      }, \"No Algorithm Selected\"));\n    } else if (props.selectedAlgorithm === enumerations.algorithms.dijkstras) {\n      setRenderedText( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, \"Dijkstras algorithm is a \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 36\n        }\n      }, \"weighted\"), ' ', \"search.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }), \"Weight nodes are \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 28\n        }\n      }, \"enabled\")));\n    } else if (props.selectedAlgorithm === enumerations.algorithms.DFS) {\n      setRenderedText( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, \"DFS is an \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, \"unweighted\"), \" search.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }), \"Weight nodes are \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 28\n        }\n      }, \"disabled\")));\n    } else if (props.selectedAlgorithm === enumerations.algorithms.AStar) {\n      setRenderedText( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, \"A* is a \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      }, \"weighted\"), \" search.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }), \"Weight nodes are \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }\n      }, \"enabled\")));\n    }\n  }, [props]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, renderedText));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/Info.jsx"],"names":["React","useState","useEffect","enumerations","Info","props","renderedText","setRenderedText","console","log","selectedAlgorithm","algorithms","none","dijkstras","DFS","AStar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,YAAZ,MAA8B,4BAA9B;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,uBAAD,CAAhD;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAK,CAACK,iBAAN,KAA4BP,YAAY,CAACQ,UAAb,CAAwBC,IAAxD,EAA8D;AAC5DL,MAAAA,eAAe,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAD,CAAf;AACD,KAFD,MAEO,IAAIF,KAAK,CAACK,iBAAN,KAA4BP,YAAY,CAACQ,UAAb,CAAwBE,SAAxD,EAAmE;AACxEN,MAAAA,eAAe,eACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAC2B;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAD3B,EACkE,GADlE,0BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,oCAImB;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJnB,CADa,CAAf;AAQD,KATM,MASA,IAAIF,KAAK,CAACK,iBAAN,KAA4BP,YAAY,CAACQ,UAAb,CAAwBG,GAAxD,EAA6D;AAClEP,MAAAA,eAAe,eACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACY;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADZ,2BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,oCAGmB;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHnB,CADa,CAAf;AAOD,KARM,MAQA,IAAIF,KAAK,CAACK,iBAAN,KAA4BP,YAAY,CAACQ,UAAb,CAAwBI,KAAxD,EAA+D;AACpER,MAAAA,eAAe,eACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACU;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADV,2BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,oCAGmB;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHnB,CADa,CAAf;AAOD;AACF,GA7BQ,EA6BN,CAACF,KAAD,CA7BM,CAAT;AA+BA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,YAA1B,CADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as enumerations from '../constants/algorithmEnum';\n\nexport default function Info(props) {\n  const [renderedText, setRenderedText] = useState('No Algorithm Selected');\n\n  console.log(props);\n\n  useEffect(() => {\n    if (props.selectedAlgorithm === enumerations.algorithms.none) {\n      setRenderedText(<p>No Algorithm Selected</p>);\n    } else if (props.selectedAlgorithm === enumerations.algorithms.dijkstras) {\n      setRenderedText(\n        <p>\n          Dijkstras algorithm is a <span className=\"bold\">weighted</span>{' '}\n          search.\n          <br />\n          Weight nodes are <span className=\"bold\">enabled</span>\n        </p>\n      );\n    } else if (props.selectedAlgorithm === enumerations.algorithms.DFS) {\n      setRenderedText(\n        <p>\n          DFS is an <span className=\"bold\">unweighted</span> search.\n          <br />\n          Weight nodes are <span className=\"bold\">disabled</span>\n        </p>\n      );\n    } else if (props.selectedAlgorithm === enumerations.algorithms.AStar) {\n      setRenderedText(\n        <p>\n          A* is a <span className=\"bold\">weighted</span> search.\n          <br />\n          Weight nodes are <span className=\"bold\">enabled</span>\n        </p>\n      );\n    }\n  }, [props]);\n\n  return (\n    <React.Fragment>\n      <div id=\"info-container\">{renderedText}</div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}