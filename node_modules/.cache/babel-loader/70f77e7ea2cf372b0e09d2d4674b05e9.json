{"ast":null,"code":"import _classCallCheck from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Grid from'./containers/Grid';import Toolbar from'./containers/Toolbar';import Stats from'./containers/Stats';import Info from'./containers/Info';import TutorialModal from'./containers/TutorialModal';import*as enumerations from'./constants/enumerations';var Main=/*#__PURE__*/function(_Component){_inherits(Main,_Component);var _super=_createSuper(Main);function Main(props){var _this;_classCallCheck(this,Main);_this=_super.call(this,props);_this.handleResetClick=_this.handleResetClick.bind(_assertThisInitialized(_this));_this.handleGoClick=_this.handleGoClick.bind(_assertThisInitialized(_this));_this.setAlgorithm=_this.setAlgorithm.bind(_assertThisInitialized(_this));_this.setAlgorithmRunning=_this.setAlgorithmRunning.bind(_assertThisInitialized(_this));_this.setStats=_this.setStats.bind(_assertThisInitialized(_this));_this.setGridModified=_this.setGridModified.bind(_assertThisInitialized(_this));_this.generateMaze=_this.generateMaze.bind(_assertThisInitialized(_this));_this.setTutorialModalOpen=_this.setTutorialModalOpen.bind(_assertThisInitialized(_this));_this.gridRef=React.createRef();// used to handle reseting the grid.\n_this.state={algorithm:enumerations.algorithms.none,algorithmRunning:false,algorithmName:null,algorithmUsed:null,pathLength:null,nodesChecked:null,clearStats:false,weightsDisabled:false,tutorialModalOpen:true};return _this;}_createClass(Main,[{key:\"handleResetClick\",value:function handleResetClick(){this.gridRef.current.resetGrid();this.setState({algorithmRunning:false,algorithmUsed:null,pathLength:null,nodesChecked:null,clearStats:true});}},{key:\"handleGoClick\",value:function handleGoClick(){this.gridRef.current.runVisualiser(this.state.algorithm);this.setState({algorithmRunning:true,algorithmUsed:this.state.algorithmName,pathLength:null,nodesChecked:null});}},{key:\"setAlgorithmRunning\",value:function setAlgorithmRunning(state){this.setState({algorithmRunning:state});}},{key:\"setAlgorithm\",value:function setAlgorithm(algorithm,algorithmName){this.setState({algorithm:algorithm,algorithmName:algorithmName});if(this.state.algorithm!==enumerations.algorithms.none){this.gridRef.current.clearPaths();}if([enumerations.algorithms.DFS,enumerations.algorithms.BFS].includes(algorithm)){this.setState({weightsDisabled:true});var weightsRemoved=this.gridRef.current.removeWeights();if(weightsRemoved){this.setGridModified();}}else{this.setState({weightsDisabled:false});}}},{key:\"setStats\",value:function setStats(pathLength,nodesChecked){this.setState({pathLength:pathLength,nodesChecked:nodesChecked,clearStats:false});}},{key:\"setGridModified\",value:function setGridModified(){if(!this.state.clearStats){this.setState({clearStats:true});}}},{key:\"setTutorialModalOpen\",value:function setTutorialModalOpen(val){this.setState({tutorialModalOpen:val});}},{key:\"generateMaze\",value:function generateMaze(mazeType){this.setGridModified();this.gridRef.current.generateMaze(mazeType);}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Toolbar,{handleResetClick:this.handleResetClick,handleGoClick:this.handleGoClick,algorithm:this.state.algorithm,setAlgorithm:this.setAlgorithm,algorithmRunning:this.state.algorithmRunning,generateMaze:this.generateMaze,setTutorialModalOpen:this.setTutorialModalOpen}),/*#__PURE__*/React.createElement(Stats,{algorithmUsed:this.state.algorithmUsed,pathLength:this.state.pathLength,nodesChecked:this.state.nodesChecked,clearStats:this.state.clearStats}),/*#__PURE__*/React.createElement(Info,{selectedAlgorithm:this.state.algorithm}),/*#__PURE__*/React.createElement(Grid,{forwardedRef:this.gridRef,setAlgorithmRunning:this.setAlgorithmRunning,setStats:this.setStats,setGridModified:this.setGridModified,algorithmRunning:this.state.algorithmRunning,weightsDisabled:this.state.weightsDisabled}),this.state.tutorialModalOpen?/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){_this2.setState({tutorialModalOpen:false});}},/*#__PURE__*/React.createElement(TutorialModal,{setModalOpen:this.setTutorialModalOpen})):null);}}]);return Main;}(Component);export default Main;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/App.js"],"names":["React","Component","Grid","Toolbar","Stats","Info","TutorialModal","enumerations","Main","props","handleResetClick","bind","handleGoClick","setAlgorithm","setAlgorithmRunning","setStats","setGridModified","generateMaze","setTutorialModalOpen","gridRef","createRef","state","algorithm","algorithms","none","algorithmRunning","algorithmName","algorithmUsed","pathLength","nodesChecked","clearStats","weightsDisabled","tutorialModalOpen","current","resetGrid","setState","runVisualiser","clearPaths","DFS","BFS","includes","weightsRemoved","removeWeights","val","mazeType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from './containers/Grid';\nimport Toolbar from './containers/Toolbar';\nimport Stats from './containers/Stats';\nimport Info from './containers/Info';\nimport TutorialModal from './containers/TutorialModal';\nimport * as enumerations from './constants/enumerations';\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.handleGoClick = this.handleGoClick.bind(this);\n    this.setAlgorithm = this.setAlgorithm.bind(this);\n    this.setAlgorithmRunning = this.setAlgorithmRunning.bind(this);\n    this.setStats = this.setStats.bind(this);\n    this.setGridModified = this.setGridModified.bind(this);\n    this.generateMaze = this.generateMaze.bind(this);\n    this.setTutorialModalOpen = this.setTutorialModalOpen.bind(this);\n\n    this.gridRef = React.createRef(); // used to handle reseting the grid.\n\n    this.state = {\n      algorithm: enumerations.algorithms.none,\n      algorithmRunning: false,\n      algorithmName: null,\n      algorithmUsed: null,\n      pathLength: null,\n      nodesChecked: null,\n      clearStats: false,\n      weightsDisabled: false,\n      tutorialModalOpen: true,\n    };\n  }\n\n  handleResetClick() {\n    this.gridRef.current.resetGrid();\n    this.setState({\n      algorithmRunning: false,\n      algorithmUsed: null,\n      pathLength: null,\n      nodesChecked: null,\n      clearStats: true,\n    });\n  }\n\n  handleGoClick() {\n    this.gridRef.current.runVisualiser(this.state.algorithm);\n    this.setState({\n      algorithmRunning: true,\n      algorithmUsed: this.state.algorithmName,\n      pathLength: null,\n      nodesChecked: null,\n    });\n  }\n\n  setAlgorithmRunning(state) {\n    this.setState({ algorithmRunning: state });\n  }\n\n  setAlgorithm(algorithm, algorithmName) {\n    this.setState({ algorithm: algorithm, algorithmName: algorithmName });\n\n    if (this.state.algorithm !== enumerations.algorithms.none) {\n      this.gridRef.current.clearPaths();\n    }\n    if (\n      [enumerations.algorithms.DFS, enumerations.algorithms.BFS].includes(\n        algorithm\n      )\n    ) {\n      this.setState({ weightsDisabled: true });\n      const weightsRemoved = this.gridRef.current.removeWeights();\n      if (weightsRemoved) {\n        this.setGridModified();\n      }\n    } else {\n      this.setState({ weightsDisabled: false });\n    }\n  }\n\n  setStats(pathLength, nodesChecked) {\n    this.setState({\n      pathLength: pathLength,\n      nodesChecked: nodesChecked,\n      clearStats: false,\n    });\n  }\n\n  setGridModified() {\n    if (!this.state.clearStats) {\n      this.setState({ clearStats: true });\n    }\n  }\n\n  setTutorialModalOpen(val) {\n    this.setState({ tutorialModalOpen: val });\n  }\n\n  generateMaze(mazeType) {\n    this.setGridModified();\n    this.gridRef.current.generateMaze(mazeType);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Toolbar\n          handleResetClick={this.handleResetClick}\n          handleGoClick={this.handleGoClick}\n          algorithm={this.state.algorithm}\n          setAlgorithm={this.setAlgorithm}\n          algorithmRunning={this.state.algorithmRunning}\n          generateMaze={this.generateMaze}\n          setTutorialModalOpen={this.setTutorialModalOpen}\n        />\n        <Stats\n          algorithmUsed={this.state.algorithmUsed}\n          pathLength={this.state.pathLength}\n          nodesChecked={this.state.nodesChecked}\n          clearStats={this.state.clearStats}\n        />\n        <Info selectedAlgorithm={this.state.algorithm} />\n        <Grid\n          forwardedRef={this.gridRef}\n          setAlgorithmRunning={this.setAlgorithmRunning}\n          setStats={this.setStats}\n          setGridModified={this.setGridModified}\n          algorithmRunning={this.state.algorithmRunning}\n          weightsDisabled={this.state.weightsDisabled}\n        />\n        {this.state.tutorialModalOpen ? (\n          <div\n            onClick={() => {\n              this.setState({ tutorialModalOpen: false });\n            }}\n          >\n            <TutorialModal setModalOpen={this.setTutorialModalOpen} />\n          </div>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}