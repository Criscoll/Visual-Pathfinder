{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/header/header.jsx\";\nimport React, { Component } from \"react\";\nimport \"./header.css\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [],\n      isStartHovered: false,\n      isEndHovered: false,\n      isWallHovered: false,\n      isResetHovered: false,\n      buttonPressed: \"\"\n    };\n    this.handleStartHover = this.handleStartHover.bind(this);\n    this.handleEndHover = this.handleEndHover.bind(this);\n    this.handleWallHover = this.handleWallHover.bind(this);\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleEndClick = this.handleEndClick.bind(this);\n    this.handleWallClick = this.handleWallClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n  }\n\n  handleStartHover() {\n    this.setState({\n      isStartHovered: !this.state.isStartHovered\n    });\n  }\n\n  handleEndHover() {\n    this.setState({\n      isEndHovered: !this.state.isEndHovered\n    });\n  }\n\n  handleWallHover() {\n    this.setState({\n      isWallHovered: !this.state.isWallHovered\n    });\n  }\n\n  handleResetHover() {\n    this.setState({\n      isResetHovered: !this.state.isResetHovered\n    });\n  }\n\n  handleStartClick() {\n    this.props.startClick();\n    this.setState({\n      buttonPressed: \"start\"\n    });\n  }\n\n  handleEndClick() {\n    this.props.endClick();\n    this.setState({\n      buttonPressed: \"end\"\n    });\n  }\n\n  handleWallClick() {\n    this.props.wallClick();\n    this.setState({\n      buttonPressed: \"wall\"\n    });\n  }\n\n  handleResetClick() {\n    this.props.resetClick();\n    this.setState({\n      buttonPressed: \"reset\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Visual Pathfinder\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: this.getBtnClass(\"start\"),\n      onClick: this.handleStartClick,\n      onMouseEnter: this.handleStartHover,\n      onMouseLeave: this.handleStartHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.getBtnClass(\"end\"),\n      onClick: this.handleEndClick,\n      onMouseEnter: this.handleEndHover,\n      onMouseLeave: this.handleEndHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"End\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.getBtnClass(\"wall\"),\n      onClick: this.handleWallClick,\n      onMouseEnter: this.handleWallHover,\n      onMouseLeave: this.handleWallHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Wall\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.getBtnClass(\"reset\"),\n      onClick: this.handleResetClick,\n      onMouseEnter: this.handleResetHover,\n      onMouseLeave: this.handleResetHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Clear Grid\")));\n  }\n\n  getBtnClass(button) {\n    let btnClass = \"\";\n\n    if (button === \"start\") {\n      btnClass = this.state.isStartHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"start\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"end\") {\n      btnClass = this.state.isEndHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"end\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"wall\") {\n      btnClass = this.state.isWallHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"wall\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"reset\") {\n      btnClass = this.state.isWallHovered ? \"button-hovered\" : \"button-default\";\n    }\n\n    return btnClass;\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/header/header.jsx"],"names":["React","Component","Header","constructor","props","state","nodes","isStartHovered","isEndHovered","isWallHovered","isResetHovered","buttonPressed","handleStartHover","bind","handleEndHover","handleWallHover","handleStartClick","handleEndClick","handleWallClick","handleResetClick","setState","handleResetHover","startClick","endClick","wallClick","resetClick","render","getBtnClass","button","btnClass"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./header.css\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [],\n      isStartHovered: false,\n      isEndHovered: false,\n      isWallHovered: false,\n      isResetHovered: false,\n      buttonPressed: \"\",\n    };\n    this.handleStartHover = this.handleStartHover.bind(this);\n    this.handleEndHover = this.handleEndHover.bind(this);\n    this.handleWallHover = this.handleWallHover.bind(this);\n\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleEndClick = this.handleEndClick.bind(this);\n    this.handleWallClick = this.handleWallClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n  }\n\n  handleStartHover() {\n    this.setState({ isStartHovered: !this.state.isStartHovered });\n  }\n\n  handleEndHover() {\n    this.setState({ isEndHovered: !this.state.isEndHovered });\n  }\n\n  handleWallHover() {\n    this.setState({ isWallHovered: !this.state.isWallHovered });\n  }\n\n  handleResetHover() {\n    this.setState({ isResetHovered: !this.state.isResetHovered });\n  }\n\n  handleStartClick() {\n    this.props.startClick();\n    this.setState({ buttonPressed: \"start\" });\n  }\n\n  handleEndClick() {\n    this.props.endClick();\n    this.setState({ buttonPressed: \"end\" });\n  }\n\n  handleWallClick() {\n    this.props.wallClick();\n    this.setState({ buttonPressed: \"wall\" });\n  }\n\n  handleResetClick() {\n    this.props.resetClick();\n    this.setState({ buttonPressed: \"reset\" });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Visual Pathfinder</h1>\n        <ul className=\"button-container\">\n          <button\n            className={this.getBtnClass(\"start\")}\n            onClick={this.handleStartClick}\n            onMouseEnter={this.handleStartHover}\n            onMouseLeave={this.handleStartHover}\n          >\n            Start\n          </button>\n          <button\n            className={this.getBtnClass(\"end\")}\n            onClick={this.handleEndClick}\n            onMouseEnter={this.handleEndHover}\n            onMouseLeave={this.handleEndHover}\n          >\n            End\n          </button>\n          <button\n            className={this.getBtnClass(\"wall\")}\n            onClick={this.handleWallClick}\n            onMouseEnter={this.handleWallHover}\n            onMouseLeave={this.handleWallHover}\n          >\n            Wall\n          </button>\n          <button\n            className={this.getBtnClass(\"reset\")}\n            onClick={this.handleResetClick}\n            onMouseEnter={this.handleResetHover}\n            onMouseLeave={this.handleResetHover}\n          >\n            Clear Grid\n          </button>\n        </ul>\n      </div>\n    );\n  }\n\n  getBtnClass(button) {\n    let btnClass = \"\";\n\n    if (button === \"start\") {\n      btnClass = this.state.isStartHovered\n        ? \"button-hovered\"\n        : \"button-default\";\n\n      if (this.state.buttonPressed === \"start\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"end\") {\n      btnClass = this.state.isEndHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"end\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"wall\") {\n      btnClass = this.state.isWallHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"wall\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"reset\") {\n      btnClass = this.state.isWallHovered ? \"button-hovered\" : \"button-default\";\n    }\n\n    return btnClass;\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}