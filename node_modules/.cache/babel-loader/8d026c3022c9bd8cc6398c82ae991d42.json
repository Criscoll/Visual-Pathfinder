{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nexport default function Stats(props) {\n  const [currentStats, setCurrentStats] = useState({});\n  const [previousStats, setPreviousStats] = useState({});\n  useEffect(() => {}, [props]);\n  console.log(props);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, props.pathLength && props.nodesChecked ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Alogrithm used: \", props.algorithmUsed), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Path Length: \", props.pathLength), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Nodes Visited: \", props.nodesChecked - 1)) : null));\n}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/Stats.jsx"],"names":["React","useState","useEffect","useRef","Stats","props","currentStats","setCurrentStats","previousStats","setPreviousStats","console","log","pathLength","nodesChecked","algorithmUsed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACG,KAAD,CAAX,CAAT;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACO,UAAN,IAAoBP,KAAK,CAACQ,YAA1B,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBR,KAAK,CAACS,aAA1B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBT,KAAK,CAACO,UAAvB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBP,KAAK,CAACQ,YAAN,GAAqB,CAAxC,CAHF,CADD,GAMG,IAPN,CADF,CADF;AAaD","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nexport default function Stats(props) {\n  const [currentStats, setCurrentStats] = useState({});\n  const [previousStats, setPreviousStats] = useState({});\n\n  useEffect(() => {}, [props]);\n\n  console.log(props);\n  return (\n    <React.Fragment>\n      <div id=\"stats-container\">\n        {props.pathLength && props.nodesChecked ? (\n          <React.Fragment>\n            <p>Alogrithm used: {props.algorithmUsed}</p>\n            <p>Path Length: {props.pathLength}</p>\n            <p>Nodes Visited: {props.nodesChecked - 1}</p>\n          </React.Fragment>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}