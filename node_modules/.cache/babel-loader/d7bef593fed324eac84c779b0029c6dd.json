{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/Grid.jsx\";\nimport React, { Component } from \"react\";\nimport Node from \"./node/node\";\n\nclass Grid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nodes: []\n    };\n  }\n\n  generateNodes() {\n    let nodes = [];\n\n    for (let i = 0; i < 15; i++) {\n      let currentRow = [];\n\n      for (let j = 0; j < 15; j++) {\n        nodes.push(currentRow);\n      }\n    }\n\n    this.setState({\n      nodes\n    });\n  }\n\n  render() {\n    const {\n      nodes\n    } = this.state;\n    console.log(nodes);\n    return /*#__PURE__*/React.createElement(Node, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/Grid.jsx"],"names":["React","Component","Node","Grid","state","nodes","generateNodes","i","currentRow","j","push","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACNC,MAAAA,KAAK,EAAE;AADD,KADmB;AAAA;;AAK3BC,EAAAA,aAAa,GAAG;AACd,QAAID,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BJ,QAAAA,KAAK,CAACK,IAAN,CAAWF,UAAX;AACD;AACF;;AAED,SAAKG,QAAL,CAAc;AAAEN,MAAAA;AAAF,KAAd;AACD;;AACDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,wBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AApB0B;;AAuB7B,eAAeF,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Node from \"./node/node\";\n\nclass Grid extends Component {\n  state = {\n    nodes: [],\n  };\n\n  generateNodes() {\n    let nodes = [];\n    for (let i = 0; i < 15; i++) {\n      let currentRow = [];\n      for (let j = 0; j < 15; j++) {\n        nodes.push(currentRow);\n      }\n    }\n\n    this.setState({ nodes });\n  }\n  render() {\n    const { nodes } = this.state;\n    console.log(nodes);\n    return <Node></Node>;\n  }\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}