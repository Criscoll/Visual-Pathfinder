{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/header/header.jsx\";\nimport React, { Component } from \"react\";\nimport \"./header.css\";\nimport Grid from \"./grid/grid\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [],\n      selectionMode: \"\",\n      resetGridCalled: false,\n      isStartHovered: false,\n      isEndHovered: false,\n      isWallHovered: false,\n      isResetHovered: false,\n      isGoHovered: false,\n      buttonPressed: \"\"\n    };\n    this.handleStartHover = this.handleStartHover.bind(this);\n    this.handleEndHover = this.handleEndHover.bind(this);\n    this.handleWallHover = this.handleWallHover.bind(this);\n    this.handleResetHover = this.handleResetHover.bind(this);\n    this.handleGoHover = this.handleGoHover.bind(this);\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleEndClick = this.handleEndClick.bind(this);\n    this.handleWallClick = this.handleWallClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.handleGoClick = this.handleGoClick.bind(this);\n    this.gridRef = React.createRef(); // used to handle reseting the grid. Need to access the method from here\n  }\n\n  handleStartHover() {\n    this.setState({\n      isStartHovered: !this.state.isStartHovered\n    });\n  }\n\n  handleEndHover() {\n    this.setState({\n      isEndHovered: !this.state.isEndHovered\n    });\n  }\n\n  handleWallHover() {\n    this.setState({\n      isWallHovered: !this.state.isWallHovered\n    });\n  }\n\n  handleResetHover() {\n    this.setState({\n      isResetHovered: !this.state.isResetHovered\n    });\n  }\n\n  handleGoHover() {\n    this.setState({\n      isGoHovered: !this.state.isGoHovered\n    });\n  }\n\n  handleStartClick() {\n    this.setState({\n      selectionMode: \"start\",\n      buttonPressed: \"start\"\n    });\n  }\n\n  handleEndClick() {\n    this.setState({\n      selectionMode: \"end\",\n      buttonPressed: \"end\"\n    });\n  }\n\n  handleWallClick() {\n    this.setState({\n      selectionMode: \"wall\",\n      buttonPressed: \"wall\"\n    });\n  }\n\n  handleResetClick() {\n    this.gridRef.current.resetGrid();\n    this.setState({\n      selectionMode: \"\",\n      buttonPressed: \"reset\"\n    });\n  }\n\n  handleGoClick() {\n    this.gridRef.current.visualiseDijkstras();\n    this.setState({\n      buttonPressed: \"go\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Visual Pathfinder\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: this.getBtnClass(\"start\"),\n      onClick: this.handleStartClick,\n      onMouseEnter: this.handleStartHover,\n      onMouseLeave: this.handleStartHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.getBtnClass(\"end\"),\n      onClick: this.handleEndClick,\n      onMouseEnter: this.handleEndHover,\n      onMouseLeave: this.handleEndHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"End\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.getBtnClass(\"wall\"),\n      onClick: this.handleWallClick,\n      onMouseEnter: this.handleWallHover,\n      onMouseLeave: this.handleWallHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Wall\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.getBtnClass(\"reset\"),\n      onClick: this.handleResetClick,\n      onMouseEnter: this.handleResetHover,\n      onMouseLeave: this.handleResetHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Clear Grid\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: this.getBtnClass(\"go\"),\n      onClick: this.handleGoClick,\n      onMouseEnter: this.handleGoHover,\n      onMouseLeave: this.handleGoHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Go\")), /*#__PURE__*/React.createElement(Grid, {\n      selectionMode: this.state.selectionMode,\n      resetGrid: this.state.resetGridCalled,\n      gridRef: this.gridRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  getBtnClass(button) {\n    let btnClass = \"\";\n\n    if (button === \"start\") {\n      btnClass = this.state.isStartHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"start\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"end\") {\n      btnClass = this.state.isEndHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"end\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"wall\") {\n      btnClass = this.state.isWallHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"wall\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"reset\") {\n      btnClass = this.state.isResetHovered ? \"button-hovered\" : \"button-default\";\n    } else if (button === \"go\") {\n      btnClass = this.state.isGoHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"go\") {\n        btnClass = \"button-clicked\";\n      }\n    }\n\n    return btnClass;\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/my-app/src/components/header/header.jsx"],"names":["React","Component","Grid","Header","constructor","props","state","nodes","selectionMode","resetGridCalled","isStartHovered","isEndHovered","isWallHovered","isResetHovered","isGoHovered","buttonPressed","handleStartHover","bind","handleEndHover","handleWallHover","handleResetHover","handleGoHover","handleStartClick","handleEndClick","handleWallClick","handleResetClick","handleGoClick","gridRef","createRef","setState","current","resetGrid","visualiseDijkstras","render","getBtnClass","button","btnClass"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./header.css\";\nimport Grid from \"./grid/grid\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [],\n      selectionMode: \"\",\n      resetGridCalled: false,\n      isStartHovered: false,\n      isEndHovered: false,\n      isWallHovered: false,\n      isResetHovered: false,\n      isGoHovered: false,\n      buttonPressed: \"\",\n    };\n    this.handleStartHover = this.handleStartHover.bind(this);\n    this.handleEndHover = this.handleEndHover.bind(this);\n    this.handleWallHover = this.handleWallHover.bind(this);\n    this.handleResetHover = this.handleResetHover.bind(this);\n    this.handleGoHover = this.handleGoHover.bind(this);\n\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleEndClick = this.handleEndClick.bind(this);\n    this.handleWallClick = this.handleWallClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.handleGoClick = this.handleGoClick.bind(this);\n\n    this.gridRef = React.createRef(); // used to handle reseting the grid. Need to access the method from here\n  }\n\n  handleStartHover() {\n    this.setState({ isStartHovered: !this.state.isStartHovered });\n  }\n\n  handleEndHover() {\n    this.setState({ isEndHovered: !this.state.isEndHovered });\n  }\n\n  handleWallHover() {\n    this.setState({ isWallHovered: !this.state.isWallHovered });\n  }\n\n  handleResetHover() {\n    this.setState({ isResetHovered: !this.state.isResetHovered });\n  }\n\n  handleGoHover() {\n    this.setState({ isGoHovered: !this.state.isGoHovered });\n  }\n\n  handleStartClick() {\n    this.setState({ selectionMode: \"start\", buttonPressed: \"start\" });\n  }\n\n  handleEndClick() {\n    this.setState({ selectionMode: \"end\", buttonPressed: \"end\" });\n  }\n\n  handleWallClick() {\n    this.setState({ selectionMode: \"wall\", buttonPressed: \"wall\" });\n  }\n\n  handleResetClick() {\n    this.gridRef.current.resetGrid();\n    this.setState({ selectionMode: \"\", buttonPressed: \"reset\" });\n  }\n\n  handleGoClick() {\n    this.gridRef.current.visualiseDijkstras();\n    this.setState({ buttonPressed: \"go\" });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Visual Pathfinder</h1>\n        <ul className=\"button-container\">\n          <button\n            className={this.getBtnClass(\"start\")}\n            onClick={this.handleStartClick}\n            onMouseEnter={this.handleStartHover}\n            onMouseLeave={this.handleStartHover}\n          >\n            Start\n          </button>\n          <button\n            className={this.getBtnClass(\"end\")}\n            onClick={this.handleEndClick}\n            onMouseEnter={this.handleEndHover}\n            onMouseLeave={this.handleEndHover}\n          >\n            End\n          </button>\n          <button\n            className={this.getBtnClass(\"wall\")}\n            onClick={this.handleWallClick}\n            onMouseEnter={this.handleWallHover}\n            onMouseLeave={this.handleWallHover}\n          >\n            Wall\n          </button>\n          <button\n            className={this.getBtnClass(\"reset\")}\n            onClick={this.handleResetClick}\n            onMouseEnter={this.handleResetHover}\n            onMouseLeave={this.handleResetHover}\n          >\n            Clear Grid\n          </button>\n          <button\n            className={this.getBtnClass(\"go\")}\n            onClick={this.handleGoClick}\n            onMouseEnter={this.handleGoHover}\n            onMouseLeave={this.handleGoHover}\n          >\n            Go\n          </button>\n        </ul>\n        <Grid\n          selectionMode={this.state.selectionMode}\n          resetGrid={this.state.resetGridCalled}\n          gridRef={this.gridRef}\n        />\n      </React.Fragment>\n    );\n  }\n\n  getBtnClass(button) {\n    let btnClass = \"\";\n\n    if (button === \"start\") {\n      btnClass = this.state.isStartHovered\n        ? \"button-hovered\"\n        : \"button-default\";\n\n      if (this.state.buttonPressed === \"start\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"end\") {\n      btnClass = this.state.isEndHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"end\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"wall\") {\n      btnClass = this.state.isWallHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"wall\") {\n        btnClass = \"button-clicked\";\n      }\n    } else if (button === \"reset\") {\n      btnClass = this.state.isResetHovered\n        ? \"button-hovered\"\n        : \"button-default\";\n    } else if (button === \"go\") {\n      btnClass = this.state.isGoHovered ? \"button-hovered\" : \"button-default\";\n\n      if (this.state.buttonPressed === \"go\") {\n        btnClass = \"button-clicked\";\n      }\n    }\n\n    return btnClass;\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}