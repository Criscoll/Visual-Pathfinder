{"ast":null,"code":"import _slicedToArray from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import ReactDom from'react-dom';import AppLogo from\"../images/pathfinder-logo.svg\";import Pathfinding from'../images/pathfinding.gif';import PlacingObstacles from'../images/placing-obstacles.gif';import MovingNodes from'../images/moving-nodes.gif';import{AiOutlineRight,AiOutlineLeft,AiFillCloseCircle}from'react-icons/ai';export default function TutorialModal(props){var _useState=useState(1),_useState2=_slicedToArray(_useState,2),pageNum=_useState2[0],setPageNum=_useState2[1];function incrementPage(val){if(val<0&&pageNum>1){setPageNum(function(prevPageNum){return prevPageNum+val;});}if(val>0&&pageNum<5){setPageNum(function(prevPageNum){return prevPageNum+val;});}}return ReactDom.createPortal(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"modal-overlay\"},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-styles\",onClick:function onClick(e){e.stopPropagation();}},/*#__PURE__*/React.createElement(AiFillCloseCircle,{className:\"close-button\",onClick:function onClick(){return props.setModalOpen(false);}}),/*#__PURE__*/React.createElement(\"div\",{className:\"page-number\"},pageNum,\"/5\"),/*#__PURE__*/React.createElement(AiOutlineRight,{className:pageNum===5?'arrow-icons-disabled right':'arrow-icons right',onClick:function onClick(){return incrementPage(1);}}),/*#__PURE__*/React.createElement(AiOutlineLeft,{className:pageNum===1?'arrow-icons-disabled left':'arrow-icons left',onClick:function onClick(){return incrementPage(-1);}}),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-content\"},pageNum===1?/*#__PURE__*/React.createElement(PageOne,null):null,pageNum===2?/*#__PURE__*/React.createElement(PageTwo,null):null,pageNum===3?/*#__PURE__*/React.createElement(PageThree,null):null,pageNum===4?/*#__PURE__*/React.createElement(PageFour,null):null,pageNum===5?/*#__PURE__*/React.createElement(PageFive,null):null)))),document.getElementById('portal'));}function PageOne(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"page-one\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Welcome to the Visual Pathfinder Tool! \"),/*#__PURE__*/React.createElement(\"p\",null,\"This short tutorial will help you get started with the application. If at any point this gets too boring to read feel free to close this tutorial to jump right in! Click on the logo in the top left to open up this tutorial at any time.\"),/*#__PURE__*/React.createElement(\"img\",{src:AppLogo,alt:\"logo\",width:\"30%\"})));}function PageTwo(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"page-two\"},/*#__PURE__*/React.createElement(\"h1\",null,\"About this app \"),/*#__PURE__*/React.createElement(\"p\",null,\"A pathfinding algorithm is an algorithm that typically attempts to find the shortest distance between two points. This app provides a playground for such algorithms, to help visualise the way they behave and compare.\"),/*#__PURE__*/React.createElement(\"p\",null,\"A quick note: On this grid, these algoritms run very fast! So fast in fact I have manually slowed down their searching behaviour to help actually visualise what is happening, its not fun seeing everything happen in a milisecond or two :)\"),/*#__PURE__*/React.createElement(\"img\",{src:Pathfinding,alt:\"logo\",width:\"30%\"})));}function PageThree(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"page-three\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Placing Walls and Weights\"),/*#__PURE__*/React.createElement(\"p\",null,\"Walls are an impenetrable obstacle that prevents potential paths. Weights are also an obstacle, but can be traversed, one weight node is equivalent to 10 normal nodes in 'distance'.\"),/*#__PURE__*/React.createElement(\"p\",null,\"Walls can be placed by clicking and dragging across the grid. Holding the 'W' key while clicking will place weight nodes instead. Click the obstacles again to remove them.\"),/*#__PURE__*/React.createElement(\"img\",{src:PlacingObstacles,alt:\"placing walls gif\",width:\"90%\"})));}function PageFour(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"page-four\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Moving Start and End Nodes\"),/*#__PURE__*/React.createElement(\"p\",null,\"The Start and End nodes are your starting position and destination. They can be re-positioned by clicking and dragging, then releasing them anywhere on the grid.\"),/*#__PURE__*/React.createElement(\"img\",{src:MovingNodes,alt:\"placing walls gif\",width:\"90%\"})));}function PageFive(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"page-five\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Algorithms\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"algorithm-bold\"},\" Dijkstras\"),\" - a very popular weighted search. Will find the shortest path.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"algorithm-bold\"},\" A* (A star)\"),\" - the most effective algorithm in the list, is also a weighted search and uses a heuristic value in its search. Will find the shortest path.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"algorithm-bold\"},\" BFS\"),\" - also known as Breadth First Search is an unweighted search, meaning it does not factor in distances in its choice for which nodes to visit. Will find the shortest path for an unweighted graph / grid. Weight nodes are disabled for this type of search.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"algorithm-bold\"},\" DFS\"),\" - Depth First Search. A poor algorithm choice for pathfinding, this is also an unweighted search and so weight nodes are disabled. Is not guaranteed to find the shortest path.\")));}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/TutorialModal.jsx"],"names":["React","useState","ReactDom","Pathfinding","PlacingObstacles","MovingNodes","AiOutlineRight","AiOutlineLeft","AiFillCloseCircle","TutorialModal","props","pageNum","setPageNum","incrementPage","val","prevPageNum","createPortal","e","stopPropagation","setModalOpen","document","getElementById","PageOne","AppLogo","PageTwo","PageThree","PageFour","PageFive"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDom from 'react-dom';\nimport AppLogo from '../images/pathfinder-logo.svg';\nimport Pathfinding from '../images/pathfinding.gif';\nimport PlacingObstacles from '../images/placing-obstacles.gif';\nimport MovingNodes from '../images/moving-nodes.gif';\n\nimport {\n  AiOutlineRight,\n  AiOutlineLeft,\n  AiFillCloseCircle,\n} from 'react-icons/ai';\n\nexport default function TutorialModal(props) {\n  const [pageNum, setPageNum] = useState(1);\n\n  function incrementPage(val) {\n    if (val < 0 && pageNum > 1) {\n      setPageNum((prevPageNum) => prevPageNum + val);\n    }\n\n    if (val > 0 && pageNum < 5) {\n      setPageNum((prevPageNum) => prevPageNum + val);\n    }\n  }\n\n  return ReactDom.createPortal(\n    <React.Fragment>\n      <div className=\"modal-overlay\">\n        <div\n          className=\"modal-styles\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <AiFillCloseCircle\n            className=\"close-button\"\n            onClick={() => props.setModalOpen(false)}\n          />\n          <div className=\"page-number\">{pageNum}/5</div>\n          <AiOutlineRight\n            className={\n              pageNum === 5 ? 'arrow-icons-disabled right' : 'arrow-icons right'\n            }\n            onClick={() => incrementPage(1)}\n          />\n          <AiOutlineLeft\n            className={\n              pageNum === 1 ? 'arrow-icons-disabled left' : 'arrow-icons left'\n            }\n            onClick={() => incrementPage(-1)}\n          />\n\n          <div className=\"modal-content\">\n            {pageNum === 1 ? <PageOne /> : null}\n            {pageNum === 2 ? <PageTwo /> : null}\n            {pageNum === 3 ? <PageThree /> : null}\n            {pageNum === 4 ? <PageFour /> : null}\n            {pageNum === 5 ? <PageFive /> : null}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>,\n    document.getElementById('portal')\n  );\n}\n\nfunction PageOne() {\n  return (\n    <React.Fragment>\n      <div className=\"page-one\">\n        <h1>Welcome to the Visual Pathfinder Tool! </h1>\n        <p>\n          This short tutorial will help you get started with the application. If\n          at any point this gets too boring to read feel free to close this\n          tutorial to jump right in! Click on the logo in the top left to open\n          up this tutorial at any time.\n        </p>\n        <img src={AppLogo} alt=\"logo\" width=\"30%\"></img>\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction PageTwo() {\n  return (\n    <React.Fragment>\n      <div className=\"page-two\">\n        <h1>About this app </h1>\n        <p>\n          A pathfinding algorithm is an algorithm that typically attempts to\n          find the shortest distance between two points. This app provides a\n          playground for such algorithms, to help visualise the way they behave\n          and compare.\n        </p>\n\n        <p>\n          A quick note: On this grid, these algoritms run very fast! So fast in\n          fact I have manually slowed down their searching behaviour to help\n          actually visualise what is happening, its not fun seeing everything\n          happen in a milisecond or two :)\n        </p>\n        <img src={Pathfinding} alt=\"logo\" width=\"30%\"></img>\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction PageThree() {\n  return (\n    <React.Fragment>\n      <div className=\"page-three\">\n        <h1>Placing Walls and Weights</h1>\n        <p>\n          Walls are an impenetrable obstacle that prevents potential paths.\n          Weights are also an obstacle, but can be traversed, one weight node is\n          equivalent to 10 normal nodes in 'distance'.\n        </p>\n\n        <p>\n          Walls can be placed by clicking and dragging across the grid. Holding\n          the 'W' key while clicking will place weight nodes instead. Click the\n          obstacles again to remove them.\n        </p>\n        <img src={PlacingObstacles} alt=\"placing walls gif\" width=\"90%\" />\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction PageFour() {\n  return (\n    <React.Fragment>\n      <div className=\"page-four\">\n        <h1>Moving Start and End Nodes</h1>\n        <p>\n          The Start and End nodes are your starting position and destination.\n          They can be re-positioned by clicking and dragging, then releasing\n          them anywhere on the grid.\n        </p>\n\n        <img src={MovingNodes} alt=\"placing walls gif\" width=\"90%\" />\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction PageFive() {\n  return (\n    <React.Fragment>\n      <div className=\"page-five\">\n        <h1>Algorithms</h1>\n        <p>\n          <span className=\"algorithm-bold\"> Dijkstras</span> - a very popular\n          weighted search. Will find the shortest path.\n        </p>\n        <p>\n          <span className=\"algorithm-bold\"> A* (A star)</span> - the most\n          effective algorithm in the list, is also a weighted search and uses a\n          heuristic value in its search. Will find the shortest path.\n        </p>\n        <p>\n          <span className=\"algorithm-bold\"> BFS</span> - also known as Breadth\n          First Search is an unweighted search, meaning it does not factor in\n          distances in its choice for which nodes to visit. Will find the\n          shortest path for an unweighted graph / grid. Weight nodes are\n          disabled for this type of search.\n        </p>\n        <p>\n          <span className=\"algorithm-bold\"> DFS</span> - Depth First Search. A\n          poor algorithm choice for pathfinding, this is also an unweighted\n          search and so weight nodes are disabled. Is not guaranteed to find the\n          shortest path.\n        </p>\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}