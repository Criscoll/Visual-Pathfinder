{"ast":null,"code":"import _slicedToArray from\"/home/cristian/Documents/projects/visual_pathfinder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import*as enumerations from'../constants/enumerations';export default function Info(props){var _useState=useState('No Algorithm Selected'),_useState2=_slicedToArray(_useState,2),renderedText=_useState2[0],setRenderedText=_useState2[1];useEffect(function(){if(props.selectedAlgorithm===enumerations.algorithms.none){setRenderedText(/*#__PURE__*/React.createElement(\"p\",null,\"No Algorithm Selected\"));}else if(props.selectedAlgorithm===enumerations.algorithms.dijkstras){setRenderedText(/*#__PURE__*/React.createElement(\"p\",null,\"Dijkstras algorithm is a \",/*#__PURE__*/React.createElement(\"span\",{className:\"bold\"},\"weighted\"),' ',\"search.\",/*#__PURE__*/React.createElement(\"br\",null),\"Weight nodes are \",/*#__PURE__*/React.createElement(\"span\",{className:\"bold\"},\"enabled\")));}else if(props.selectedAlgorithm===enumerations.algorithms.DFS){setRenderedText(/*#__PURE__*/React.createElement(\"p\",null,\"DFS (Depth First Search) is an\",' ',/*#__PURE__*/React.createElement(\"span\",{className:\"bold\"},\"unweighted\"),\" search.\",/*#__PURE__*/React.createElement(\"br\",null),\"Weight nodes are \",/*#__PURE__*/React.createElement(\"span\",{className:\"bold\"},\"disabled\")));}else if(props.selectedAlgorithm===enumerations.algorithms.AStar){setRenderedText(/*#__PURE__*/React.createElement(\"p\",null,\"A* is a \",/*#__PURE__*/React.createElement(\"span\",{className:\"bold\"},\"weighted\"),\" search.\",/*#__PURE__*/React.createElement(\"br\",null),\"Weight nodes are \",/*#__PURE__*/React.createElement(\"span\",{className:\"bold\"},\"enabled\")));}else if(props.selectedAlgorithm===enumerations.algorithms.BFS){setRenderedText(/*#__PURE__*/React.createElement(\"p\",null,\"BFS (Breadth First Search) is an\",' ',/*#__PURE__*/React.createElement(\"span\",{className:\"bold\"},\"unweighted\"),\" search.\",/*#__PURE__*/React.createElement(\"br\",null),\"Weight nodes are \",/*#__PURE__*/React.createElement(\"span\",{className:\"bold\"},\"disabled\")));}},[props]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{id:\"info-container\"},renderedText));}","map":{"version":3,"sources":["/home/cristian/Documents/projects/visual_pathfinder/src/containers/Info.jsx"],"names":["React","useState","useEffect","enumerations","Info","props","renderedText","setRenderedText","selectedAlgorithm","algorithms","none","dijkstras","DFS","AStar","BFS"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,2BAA9B,CAEA,cAAe,SAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,eACMJ,QAAQ,CAAC,uBAAD,CADd,wCAC3BK,YAD2B,eACbC,eADa,eAGlCL,SAAS,CAAC,UAAM,CACd,GAAIG,KAAK,CAACG,iBAAN,GAA4BL,YAAY,CAACM,UAAb,CAAwBC,IAAxD,CAA8D,CAC5DH,eAAe,cAAC,qDAAD,CAAf,CACD,CAFD,IAEO,IAAIF,KAAK,CAACG,iBAAN,GAA4BL,YAAY,CAACM,UAAb,CAAwBE,SAAxD,CAAmE,CACxEJ,eAAe,cACb,sEAC2B,4BAAM,SAAS,CAAC,MAAhB,aAD3B,CACkE,GADlE,wBAGE,8BAHF,kCAImB,4BAAM,SAAS,CAAC,MAAhB,YAJnB,CADa,CAAf,CAQD,CATM,IASA,IAAIF,KAAK,CAACG,iBAAN,GAA4BL,YAAY,CAACM,UAAb,CAAwBG,GAAxD,CAA6D,CAClEL,eAAe,cACb,8DACiC,GADjC,cAEE,4BAAM,SAAS,CAAC,MAAhB,eAFF,yBAGE,8BAHF,kCAImB,4BAAM,SAAS,CAAC,MAAhB,aAJnB,CADa,CAAf,CAQD,CATM,IASA,IAAIF,KAAK,CAACG,iBAAN,GAA4BL,YAAY,CAACM,UAAb,CAAwBI,KAAxD,CAA+D,CACpEN,eAAe,cACb,qDACU,4BAAM,SAAS,CAAC,MAAhB,aADV,yBAEE,8BAFF,kCAGmB,4BAAM,SAAS,CAAC,MAAhB,YAHnB,CADa,CAAf,CAOD,CARM,IAQA,IAAIF,KAAK,CAACG,iBAAN,GAA4BL,YAAY,CAACM,UAAb,CAAwBK,GAAxD,CAA6D,CAClEP,eAAe,cACb,gEACmC,GADnC,cAEE,4BAAM,SAAS,CAAC,MAAhB,eAFF,yBAGE,8BAHF,kCAImB,4BAAM,SAAS,CAAC,MAAhB,aAJnB,CADa,CAAf,CAQD,CACF,CAvCQ,CAuCN,CAACF,KAAD,CAvCM,CAAT,CAyCA,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,2BAAK,EAAE,CAAC,gBAAR,EAA0BC,YAA1B,CADF,CADF,CAKD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as enumerations from '../constants/enumerations';\n\nexport default function Info(props) {\n  const [renderedText, setRenderedText] = useState('No Algorithm Selected');\n\n  useEffect(() => {\n    if (props.selectedAlgorithm === enumerations.algorithms.none) {\n      setRenderedText(<p>No Algorithm Selected</p>);\n    } else if (props.selectedAlgorithm === enumerations.algorithms.dijkstras) {\n      setRenderedText(\n        <p>\n          Dijkstras algorithm is a <span className=\"bold\">weighted</span>{' '}\n          search.\n          <br />\n          Weight nodes are <span className=\"bold\">enabled</span>\n        </p>\n      );\n    } else if (props.selectedAlgorithm === enumerations.algorithms.DFS) {\n      setRenderedText(\n        <p>\n          DFS (Depth First Search) is an{' '}\n          <span className=\"bold\">unweighted</span> search.\n          <br />\n          Weight nodes are <span className=\"bold\">disabled</span>\n        </p>\n      );\n    } else if (props.selectedAlgorithm === enumerations.algorithms.AStar) {\n      setRenderedText(\n        <p>\n          A* is a <span className=\"bold\">weighted</span> search.\n          <br />\n          Weight nodes are <span className=\"bold\">enabled</span>\n        </p>\n      );\n    } else if (props.selectedAlgorithm === enumerations.algorithms.BFS) {\n      setRenderedText(\n        <p>\n          BFS (Breadth First Search) is an{' '}\n          <span className=\"bold\">unweighted</span> search.\n          <br />\n          Weight nodes are <span className=\"bold\">disabled</span>\n        </p>\n      );\n    }\n  }, [props]);\n\n  return (\n    <React.Fragment>\n      <div id=\"info-container\">{renderedText}</div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}