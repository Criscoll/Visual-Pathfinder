@import 'keyframes.scss';

@mixin node-properties() {
  position: relative;
  display: inline-block;
  height: 1.5rem;
  width: 1.5rem;
  // outline: 0.13rem solid rgba(15, 99, 121, 0.486);
  border: 0.01rem solid red;
}

@mixin node-styles(
  $node-colour,
  $timing: 200ms,
  $animation: create-node,
  $timing-fn: ease-out
) {
  background: linear-gradient($node-colour, $node-colour) no-repeat;
  background-position: center;
  animation: $animation $timing $timing-fn;
}

.material-icons {
  display: none;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: auto;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;

  transform: scale(1.3);

  user-select: none;
}

.normal-node {
  @include node-properties();
}

.wall-node {
  @include node-properties();
  @include node-styles(black);
}

.visited-node {
  @include node-properties();
  overflow: hidden;
}

.visited-node::before {
  content: '';
  position: absolute;
  width: 50%;
  height: 50%;
  margin: auto;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;

  background-color: aqua;
  border-radius: 50%;

  animation: visit-nodes linear 2000ms forwards;
}

.path-node {
  @include node-properties();
  @include node-styles(yellow, 200ms, draw-path);
}

.start-node {
  @include node-properties();
  > .material-icons.walk {
    display: block;
    animation: move-node ease-out 300ms;
  }
}

.end-node {
  @include node-properties();

  > .material-icons.flag {
    display: block;
    animation: move-node ease-out 300ms;
  }
}

.start-node-visited {
  @extend .visited-node;
  > .material-icons.walk {
    display: block;
  }
}

.start-node-path {
  @extend .path-node;
  > .material-icons.walk {
    display: block;
  }
}

.end-node-visited {
  @extend .visited-node;
  > .material-icons.flag {
    display: block;
  }
}

.end-node-found {
  @extend .path-node;
  > .material-icons.flag {
    display: block;
    animation: end-node-reached ease-out 500ms;
  }
}
